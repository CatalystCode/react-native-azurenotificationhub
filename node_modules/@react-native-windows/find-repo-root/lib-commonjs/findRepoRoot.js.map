{"version":3,"file":"findRepoRoot.js","sourceRoot":"","sources":["../src/findRepoRoot.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;;AAEH,sDAA6B;AAC7B,kEAA0C;AAC1C,gDAAwB;AAExB;;GAEG;AACH,KAAK,UAAU,YAAY;IACzB,MAAM,IAAI,GAAG,MAAM,IAAA,iBAAM,EACvB,KAAK,EAAE,GAAW,EAAyB,EAAE;QAC3C,OAAO,CAAC,MAAM,iBAAM,CAAC,MAAM,CAAC,cAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;IACzE,CAAC,EACD,EAAC,IAAI,EAAE,WAAW,EAAC,CACpB,CAAC;IAEF,IAAI,CAAC,IAAI,EAAE;QACT,MAAM,IAAI,KAAK,CACb,mFAAmF,CACpF,CAAC;KACH;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED;;GAEG;AACH,SAAS,gBAAgB;IACvB,MAAM,IAAI,GAAG,iBAAM,CAAC,IAAI,CACtB,CAAC,GAAW,EAAgB,EAAE;QAC5B,OAAO,YAAE,CAAC,UAAU,CAAC,cAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;IACjE,CAAC,EACD,EAAC,IAAI,EAAE,WAAW,EAAC,CACpB,CAAC;IAEF,IAAI,CAAC,IAAI,EAAE;QACT,MAAM,IAAI,KAAK,CACb,mFAAmF,CACpF,CAAC;KACH;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,EAAC,IAAI,EAAE,gBAAgB,EAAC,CAAC,CAAC;AACxE,kBAAe,SAAS,CAAC","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * @format\n * @ts-check\n */\n\nimport findUp from 'find-up';\nimport fs from '@react-native-windows/fs';\nimport path from 'path';\n\n/**\n * Find the root directory of a repo upward from cwd\n */\nasync function findRepoRoot(): Promise<string> {\n  const root = await findUp(\n    async (dir: string): Promise<findUp.Match> => {\n      return (await findUp.exists(path.join(dir, '.git'))) ? dir : undefined;\n    },\n    {type: 'directory'},\n  );\n\n  if (!root) {\n    throw new Error(\n      'Unable to find the root of react-native-windows. Are you running within the repo?',\n    );\n  }\n\n  return root;\n}\n\n/**\n * Synchronously finds the root directory of a repo upward from cwd\n */\nfunction findRepoRootSync(): string {\n  const root = findUp.sync(\n    (dir: string): findUp.Match => {\n      return fs.existsSync(path.join(dir, '.git')) ? dir : undefined;\n    },\n    {type: 'directory'},\n  );\n\n  if (!root) {\n    throw new Error(\n      'Unable to find the root of react-native-windows. Are you running within the repo?',\n    );\n  }\n\n  return root;\n}\n\nconst exportObj = Object.assign(findRepoRoot, {sync: findRepoRootSync});\nexport default exportObj;\n"]}