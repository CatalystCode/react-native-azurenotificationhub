{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/generator-windows/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n * @format\n */\n\nimport chalk from 'chalk';\nimport path from 'path';\nimport username from 'username';\nimport uuid from 'uuid';\nimport childProcess from 'child_process';\nimport fs from '@react-native-windows/fs';\nimport semver from 'semver';\nimport _ from 'lodash';\nimport findUp from 'find-up';\nimport {readProjectFile, findPropertyValue} from '../config/configUtils';\n\nimport {\n  createDir,\n  copyAndReplaceAll,\n  copyAndReplaceWithChangedCallback,\n} from '../generator-common';\nimport {GenerateOptions} from '..';\nimport {\n  CodedError,\n  getVersionOfNpmPackage,\n} from '@react-native-windows/telemetry';\nimport {\n  findPackage,\n  WritableNpmPackage,\n} from '@react-native-windows/package-utils';\n\nconst windowsDir = 'windows';\nconst bundleDir = 'Bundle';\n\n/**\n * This represents the data to insert nuget packages\n */\ninterface NugetPackage {\n  id: string;\n  version: string;\n}\n\nfunction pascalCase(str: string) {\n  const camelCase = _.camelCase(str);\n  return camelCase[0].toUpperCase() + camelCase.substr(1);\n}\n\nfunction resolveRnwPath(subpath: string): string {\n  return require.resolve(path.join('react-native-windows', subpath), {\n    paths: [process.cwd()],\n  });\n}\n\n// Existing high cyclomatic complexity\n// eslint-disable-next-line complexity\nexport async function copyProjectTemplateAndReplace(\n  srcRootPath: string,\n  destPath: string,\n  newProjectName: string,\n  namespace: string,\n  options: GenerateOptions,\n) {\n  if (!srcRootPath) {\n    throw new CodedError(\n      'CopyProjectTemplateNoSourcePath',\n      'Need a path to copy from',\n    );\n  }\n\n  if (!destPath) {\n    throw new CodedError(\n      'CopyProjectTemplateNoDestPath',\n      'Need a path to copy to',\n    );\n  }\n\n  if (!newProjectName) {\n    throw new CodedError(\n      'CopyProjectTemplateNoProjectName',\n      'Need a project name',\n    );\n  }\n\n  const projectType = options.projectType;\n  const language = options.language;\n\n  // React-native init only allows alphanumerics in project names, but other\n  // new project tools (like create-react-native-module) are less strict.\n  if (projectType === 'lib') {\n    newProjectName = pascalCase(newProjectName);\n  }\n\n  // Similar to the above, but we want to retain namespace separators\n  if (projectType === 'lib') {\n    namespace = namespace.split(/[.:]+/).map(pascalCase).join('.');\n  }\n\n  // Checking if we're overwriting an existing project and re-uses their projectGUID\n  const existingProjectPath = path.join(\n    destPath,\n    windowsDir,\n    newProjectName,\n    newProjectName + (language === 'cs' ? '.csproj' : '.vcxproj'),\n  );\n  let existingProjectGuid: string | undefined;\n  if (fs.existsSync(existingProjectPath)) {\n    console.log('Found existing project, extracting ProjectGuid.');\n    existingProjectGuid = findPropertyValue(\n      readProjectFile(existingProjectPath),\n      'ProjectGuid',\n      existingProjectPath,\n    ).replace(/[{}]/g, '');\n  }\n\n  createDir(path.join(destPath, windowsDir));\n  createDir(path.join(destPath, windowsDir, newProjectName));\n\n  if (projectType === 'app') {\n    createDir(path.join(destPath, windowsDir, newProjectName, bundleDir));\n    createDir(path.join(destPath, windowsDir, newProjectName, 'BundleBuilder'));\n  }\n\n  const namespaceCpp = toCppNamespace(namespace);\n  if (options.experimentalNuGetDependency) {\n    console.log('Using experimental NuGet dependency.');\n  }\n\n  let realProjectType = projectType;\n\n  if (options.useWinUI3) {\n    console.log('Using experimental WinUI3 dependency.');\n    if (projectType === 'lib') {\n      throw new CodedError(\n        'IncompatibleOptions',\n        'WinUI 3 project template only supports apps at the moment',\n        {\n          detail: 'useWinUI3 and lib',\n        },\n      );\n    } else if (language !== 'cs') {\n      throw new CodedError(\n        'IncompatibleOptions',\n        'WinUI 3 project template only support C# at the moment',\n        {\n          detail: 'useWinUI3 and cpp',\n        },\n      );\n    }\n\n    realProjectType += '-WinAppSDK';\n  }\n\n  const projDir = 'proj';\n  const srcPath = path.join(srcRootPath, `${language}-${realProjectType}`);\n  const sharedPath = path.join(srcRootPath, `shared-${projectType}`);\n  const projectGuid = existingProjectGuid || uuid.v4();\n  const rnwVersion = require(resolveRnwPath('package.json')).version;\n  const nugetVersion = options.nuGetTestVersion || rnwVersion;\n  const packageGuid = uuid.v4();\n  const currentUser = username.sync()!; // Gets the current username depending on the platform.\n\n  let mainComponentName = newProjectName;\n  const appJsonPath = await findUp('app.json', {cwd: destPath});\n  if (appJsonPath) {\n    const appJson = await fs.readJsonFile<{name: string}>(appJsonPath);\n    mainComponentName = appJson.name;\n  }\n\n  const csNugetPackages: NugetPackage[] = options.useWinUI3\n    ? getWinAppSDKPackages(nugetVersion)\n    : getUwpCsPackages();\n\n  const cppNugetPackages: NugetPackage[] = [\n    {\n      id: 'Microsoft.Windows.CppWinRT',\n      version: '2.0.211028.7',\n    },\n  ];\n\n  const templateVars: Record<string, any> = {\n    useMustache: true,\n    regExpPatternsToRemove: [],\n\n    name: newProjectName,\n    namespace: namespace,\n    namespaceCpp: namespaceCpp,\n    languageIsCpp: language === 'cpp',\n\n    rnwVersion: await getVersionOfNpmPackage('react-native-windows'),\n\n    mainComponentName: mainComponentName,\n\n    // Visual Studio is very picky about the casing of the guids for projects, project references and the solution\n    // https://www.bing.com/search?q=visual+studio+project+guid+casing&cvid=311a5ad7f9fc41089507b24600d23ee7&FORM=ANAB01&PC=U531\n    // we therefore have to precariously use the right casing in the right place or risk building in VS breaking.\n    projectGuidLower: `{${projectGuid.toLowerCase()}}`,\n    projectGuidUpper: `{${projectGuid.toUpperCase()}}`,\n\n    // packaging and signing variables:\n    packageGuid: packageGuid,\n    currentUser: currentUser,\n\n    useExperimentalNuget: options.experimentalNuGetDependency,\n    nuGetTestFeed: options.nuGetTestFeed,\n    nuGetADOFeed: nugetVersion.startsWith('0.0.0-'),\n\n    // cpp template variables\n    useWinUI3: options.useWinUI3,\n    useHermes: options.useHermes,\n    cppNugetPackages: cppNugetPackages,\n\n    // cs template variables\n    csNugetPackages: csNugetPackages,\n\n    // autolinking template variables\n    autolinkPropertiesForProps: '',\n    autolinkProjectReferencesForTargets: '',\n    autolinkCsUsingNamespaces: '',\n    autolinkCsReactPackageProviders: '',\n    autolinkCppIncludes: '',\n    autolinkCppPackageProviders:\n      '\\n    UNREFERENCED_PARAMETER(packageProviders);', // CODESYNC: vnext\\local-cli\\runWindows\\utils\\autolink.js\n  };\n\n  const commonMappings =\n    projectType === 'app'\n      ? [\n          // app common mappings\n          {\n            from: path.join(\n              srcRootPath,\n              options.useDevMode\n                ? 'metro.devMode.config.js'\n                : 'metro.config.js',\n            ),\n            to: 'metro.config.js',\n          },\n          {\n            from: path.join(srcRootPath, '_gitignore'),\n            to: path.join(windowsDir, '.gitignore'),\n          },\n          {\n            from: path.join(srcRootPath, 'b_gitignore'),\n            to: path.join(windowsDir, newProjectName, '.gitignore'),\n          },\n          {\n            from: path.join(srcRootPath, 'index.windows.bundle'),\n            to: path.join(\n              windowsDir,\n              newProjectName,\n              bundleDir,\n              'index.windows.bundle',\n            ),\n          },\n          {\n            from: path.join(srcPath, projDir, 'MyApp.sln'),\n            to: path.join(windowsDir, newProjectName + '.sln'),\n          },\n        ]\n      : [\n          // lib common mappings\n          {\n            from: path.join(srcRootPath, '_gitignore'),\n            to: path.join(windowsDir, '.gitignore'),\n          },\n          {\n            from: path.join(srcPath, projDir, 'MyLib.sln'),\n            to: path.join(windowsDir, newProjectName + '.sln'),\n          },\n        ];\n\n  for (const mapping of commonMappings) {\n    await copyAndReplaceWithChangedCallback(\n      mapping.from,\n      destPath,\n      mapping.to,\n      templateVars,\n      options.overwrite,\n    );\n  }\n\n  if (language === 'cs') {\n    const csMappings =\n      projectType === 'app'\n        ? [\n            // cs app mappings\n            {\n              from: path.join(srcPath, projDir, 'MyApp.csproj'),\n              to: path.join(\n                windowsDir,\n                newProjectName,\n                newProjectName + '.csproj',\n              ),\n            },\n          ]\n        : [\n            // cs lib mappings\n            {\n              from: path.join(srcPath, projDir, 'MyLib.csproj'),\n              to: path.join(\n                windowsDir,\n                newProjectName,\n                newProjectName + '.csproj',\n              ),\n            },\n          ];\n\n    for (const mapping of csMappings) {\n      await copyAndReplaceWithChangedCallback(\n        mapping.from,\n        destPath,\n        mapping.to,\n        templateVars,\n        options.overwrite,\n      );\n    }\n  } else {\n    const cppMappings =\n      projectType === 'app'\n        ? [\n            // cpp app mappings\n            {\n              from: path.join(srcPath, projDir, 'MyApp.vcxproj'),\n              to: path.join(\n                windowsDir,\n                newProjectName,\n                newProjectName + '.vcxproj',\n              ),\n            },\n            {\n              from: path.join(srcPath, projDir, 'MyApp.vcxproj.filters'),\n              to: path.join(\n                windowsDir,\n                newProjectName,\n                newProjectName + '.vcxproj.filters',\n              ),\n            },\n          ]\n        : [\n            // cpp lib mappings\n            {\n              from: path.join(srcPath, projDir, 'MyLib.vcxproj'),\n              to: path.join(\n                windowsDir,\n                newProjectName,\n                newProjectName + '.vcxproj',\n              ),\n            },\n            {\n              from: path.join(srcPath, projDir, 'MyLib.vcxproj.filters'),\n              to: path.join(\n                windowsDir,\n                newProjectName,\n                newProjectName + '.vcxproj.filters',\n              ),\n            },\n            {\n              from: path.join(srcPath, projDir, 'MyLib.def'),\n              to: path.join(\n                windowsDir,\n                newProjectName,\n                newProjectName + '.def',\n              ),\n            },\n          ];\n\n    for (const mapping of cppMappings) {\n      await copyAndReplaceWithChangedCallback(\n        mapping.from,\n        destPath,\n        mapping.to,\n        templateVars,\n        options.overwrite,\n      );\n    }\n  }\n\n  // shared proj\n  if (fs.existsSync(path.join(sharedPath, projDir))) {\n    const sharedProjMappings = [];\n\n    sharedProjMappings.push({\n      from: path.join(sharedPath, projDir, 'NuGet_Config'),\n      to: path.join(windowsDir, 'NuGet.Config'),\n    });\n\n    if (\n      fs.existsSync(\n        path.join(sharedPath, projDir, 'ExperimentalFeatures.props'),\n      )\n    ) {\n      sharedProjMappings.push({\n        from: path.join(sharedPath, projDir, 'ExperimentalFeatures.props'),\n        to: path.join(windowsDir, 'ExperimentalFeatures.props'),\n      });\n    }\n\n    for (const mapping of sharedProjMappings) {\n      await copyAndReplaceWithChangedCallback(\n        mapping.from,\n        destPath,\n        mapping.to,\n        templateVars,\n        options.overwrite,\n      );\n    }\n  }\n\n  // shared assets\n  if (fs.existsSync(path.join(sharedPath, 'assets'))) {\n    await copyAndReplaceAll(\n      path.join(sharedPath, 'assets'),\n      destPath,\n      path.join(windowsDir, newProjectName, 'Assets'),\n      templateVars,\n      options.overwrite,\n    );\n  }\n\n  if (!options.useWinUI3) {\n    // shared src\n    if (fs.existsSync(path.join(sharedPath, 'src'))) {\n      await copyAndReplaceAll(\n        path.join(sharedPath, 'src'),\n        destPath,\n        path.join(windowsDir, newProjectName),\n        templateVars,\n        options.overwrite,\n      );\n    }\n  } else {\n    if (fs.existsSync(path.join(srcPath, 'MyApp'))) {\n      await copyAndReplaceAll(\n        path.join(srcPath, 'MyApp'),\n        destPath,\n        path.join(windowsDir, newProjectName),\n        templateVars,\n        options.overwrite,\n      );\n    }\n  }\n\n  // src\n  if (fs.existsSync(path.join(srcPath, 'src'))) {\n    await copyAndReplaceAll(\n      path.join(srcPath, 'src'),\n      destPath,\n      path.join(windowsDir, newProjectName),\n      templateVars,\n      options.overwrite,\n    );\n  }\n\n  if (projectType === 'app') {\n    console.log(chalk.white.bold('To run your app on UWP:'));\n    console.log(chalk.white('   npx react-native run-windows'));\n  }\n}\n\nfunction getUwpCsPackages(): NugetPackage[] {\n  return [\n    {\n      id: 'Microsoft.NETCore.UniversalWindowsPlatform',\n      version: '6.2.9',\n    },\n  ];\n}\n\nfunction toCppNamespace(namespace: string) {\n  return namespace.replace(/\\./g, '::');\n}\n\nexport async function installScriptsAndDependencies(options: {\n  verbose: boolean;\n}) {\n  const projectPackage = await WritableNpmPackage.fromPath(process.cwd());\n  if (!projectPackage) {\n    throw new Error(\n      `The current directory '${process.cwd()}' is not the root of an npm package`,\n    );\n  }\n\n  await projectPackage.mergeProps({\n    scripts: {windows: 'react-native run-windows'},\n  });\n\n  const rnwPackage = await findPackage('react-native-windows');\n  if (!rnwPackage) {\n    throw new Error('Could not locate the package for react-native-windows');\n  }\n\n  const rnPackage = await findPackage('react-native');\n  if (!rnPackage) {\n    throw new Error('Could not locate the package for react-native');\n  }\n\n  // We add an exclusionList from metro config. This will be hoisted, but add\n  // an explict dep because we require it directly.\n  const cliPackage = await findPackage('@react-native-community/cli', {\n    searchPath: rnPackage.path,\n  });\n  const metroConfigPackage = await findPackage('metro-config', {\n    searchPath: cliPackage?.path || rnPackage.path,\n  });\n\n  if (metroConfigPackage) {\n    await projectPackage.mergeProps({\n      devDependencies: {\n        'metro-config': `^${metroConfigPackage.json.version}`,\n      },\n    });\n  }\n\n  const rnPeerDependency = rnwPackage.json.peerDependencies['react-native'];\n\n  if (\n    !semver.satisfies(rnPackage.json.version, rnPeerDependency) &&\n    projectPackage.json.dependencies?.['react-native']\n  ) {\n    console.log(\n      chalk.green('Installing a compatible version of react-native:'),\n    );\n    console.log(chalk.white(`    ${rnPeerDependency}`));\n\n    // Patch package.json to have proper react-native version and install\n    await projectPackage.mergeProps({\n      dependencies: {'react-native': rnPeerDependency},\n    });\n\n    // Install dependencies using correct package manager\n    const isYarn = fs.existsSync(path.join(process.cwd(), 'yarn.lock'));\n    childProcess.execSync(\n      isYarn ? 'yarn' : 'npm i',\n      options.verbose ? {stdio: 'inherit'} : {},\n    );\n  }\n}\nfunction getWinAppSDKPackages(nugetVersion: string): NugetPackage[] {\n  const winAppSDKPackages: NugetPackage[] = [];\n  winAppSDKPackages.push({\n    id: 'Microsoft.ReactNative.WindowsAppSDK',\n    version: nugetVersion,\n  });\n\n  winAppSDKPackages.push({\n    id: 'Microsoft.WindowsAppSDK',\n    version: '1.0.0',\n  });\n\n  return winAppSDKPackages;\n}\n"]}