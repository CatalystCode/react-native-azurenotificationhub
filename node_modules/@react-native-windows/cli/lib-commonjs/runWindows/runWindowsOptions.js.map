{"version":3,"file":"runWindowsOptions.js","sourceRoot":"","sources":["../../src/runWindows/runWindowsOptions.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n * @format\n */\n\nimport os from 'os';\nimport {CommandOption} from '@react-native-community/cli-types';\n\nexport type BuildArch = 'x86' | 'x64' | 'ARM64';\nexport type BuildConfig = 'Debug' | 'DebugBundle' | 'Release' | 'ReleaseBundle';\n\n/**\n *  * Options are the following:\n *    release: Boolean - Specifies release build\n *    root: String - The root of the application\n *    arch: String - The build architecture (ARM64, x86, x64)\n *    singleproc: Boolean - opt out of multi-proc builds\n *    emulator: Boolean - Deploy to the emulator\n *    device: Boolean - Deploy to a device\n *    target: String - Device GUID to deploy to\n *    remote-debugging: Boolean - Run using remote JS proxy\n *    logging: Boolean - Enables logging\n *    no-packager: Boolean - Do not launch packager while building\n *    bundle: Boolean - Enable Bundle configuration.\n *    no-launch: Boolean - Do not launch the app after deployment\n *    no-build: Boolean - Do not build the solution\n *    no-deploy: Boolean - Do not deploy the app\n *    deploy-from-layout: Force deploy from layout, even in release builds\n *    sln: String - Solution file to build\n *    msbuildprops: String - Comma separated props to pass to msbuild, eg: prop1=value1,prop2=value2\n *    direct-debugging: Number - Enable direct debugging on specified port\n *    no-telemetry: Boolean - Disables sending telemetry that allows analysis of usage and failures of the react-native-windows CLI\n */\nexport interface RunWindowsOptions {\n  release?: boolean;\n  root: string;\n  arch: BuildArch;\n  singleproc?: boolean;\n  emulator?: boolean;\n  device?: boolean;\n  target?: string;\n  remoteDebugging?: string;\n  logging?: boolean;\n  packager?: boolean;\n  bundle?: boolean;\n  launch?: boolean;\n  autolink?: boolean;\n  build?: boolean;\n  deploy?: boolean;\n  deployFromLayout?: boolean;\n  sln?: string;\n  proj?: string;\n  msbuildprops?: string;\n  buildLogDirectory?: string;\n  info?: boolean;\n  directDebugging?: number;\n  telemetry?: boolean;\n}\n\nexport const runWindowsOptions: CommandOption[] = [\n  {\n    name: '--release',\n    description: 'Specifies a release build',\n  },\n  {\n    name: '--root [string]',\n    description:\n      'Override the root directory for the windows build which contains the windows folder.',\n    default: config => config.root,\n  },\n  {\n    name: '--arch [string]',\n    description: 'The build architecture (ARM64, x86, x64)',\n    default: os.arch(),\n    parse: parseBuildArch,\n  },\n  {\n    name: '--singleproc',\n    description: 'Disables multi-proc build',\n  },\n  {\n    name: '--emulator',\n    description: 'Deploys the app to an emulator',\n  },\n  {\n    name: '--device',\n    description: 'Deploys the app to a connected device',\n  },\n  {\n    name: '--target [string]',\n    description: 'Deploys the app to the specified GUID for a device.',\n  },\n  {\n    name: '--remote-debugging',\n    description: 'Deploys the app in remote debugging mode.',\n  },\n  {\n    name: '--logging',\n    description: 'Enables logging',\n  },\n  {\n    name: '--no-packager',\n    description: 'Do not launch packager while building',\n  },\n  {\n    name: '--bundle',\n    description:\n      'Enable Bundle configuration and it would be ReleaseBundle/DebugBundle other than Release/Debug',\n  },\n  {\n    name: '--no-launch',\n    description: 'Do not launch the app after deployment',\n  },\n  {\n    name: '--no-autolink',\n    description: 'Do not run autolinking',\n  },\n  {\n    name: '--no-build',\n    description: 'Do not build the solution',\n  },\n  {\n    name: '--no-deploy',\n    description: 'Do not deploy the app',\n  },\n  {\n    name: '--deploy-from-layout',\n    description: 'Force deploy from layout',\n  },\n  {\n    name: '--sln [string]',\n    description:\n      \"Override the app solution file determined by 'react-native config', e.g. windows\\\\myApp.sln\",\n    default: undefined,\n  },\n  {\n    name: '--proj [string]',\n    description:\n      \"Override the app project file determined by 'react-native config', e.g. windows\\\\myApp\\\\myApp.vcxproj\",\n    default: undefined,\n  },\n  {\n    name: '--msbuildprops [string]',\n    description:\n      'Comma separated props to pass to msbuild, eg: prop1=value1,prop2=value2',\n  },\n  {\n    name: '--buildLogDirectory [string]',\n    description: 'Optional directory where msbuild log files should be stored',\n  },\n  {\n    name: '--info',\n    description: 'Dump environment information',\n  },\n  {\n    name: '--direct-debugging [number]',\n    description: 'Enable direct debugging on specified port',\n    parse: parseDirectDebuggingPort,\n  },\n  {\n    name: '--no-telemetry',\n    description:\n      'Disables sending telemetry that allows analysis of usage and failures of the react-native-windows CLI',\n  },\n];\n\nfunction parseBuildArch(arg: string): BuildArch {\n  const supportedArches: BuildArch[] = ['x86', 'x64', 'ARM64'];\n  for (const supported of supportedArches) {\n    if (arg.toLowerCase() === supported.toLowerCase()) {\n      return supported;\n    }\n  }\n\n  errorOut(`Unrecognized --arch '${arg}'. Expected one of ${supportedArches}`);\n}\n\nfunction parseDirectDebuggingPort(arg: string): number {\n  const num = parseInt(arg, 10);\n\n  if (!Number.isInteger(num)) {\n    errorOut(`Expected argument '--direct-debugging' to be a number`);\n  }\n  if (num < 1024 || num >= 65535) {\n    errorOut('Direct debugging port it out of range');\n  }\n\n  return num;\n}\n\nfunction errorOut(arg: string): never {\n  console.error(arg);\n  process.exit(1);\n}\n"]}