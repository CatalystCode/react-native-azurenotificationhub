{"version":3,"file":"deploy.js","sourceRoot":"","sources":["../../../src/runWindows/utils/deploy.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n * @format\n */\n\nimport {spawn, execSync, SpawnOptions} from 'child_process';\nimport fs from '@react-native-windows/fs';\nimport http from 'http';\nimport path from 'path';\nimport glob from 'glob';\nimport parse from 'xml-parser';\nimport WinAppDeployTool from './winappdeploytool';\nimport {\n  newInfo,\n  newSuccess,\n  newError,\n  newWarn,\n  newSpinner,\n  commandWithProgress,\n  runPowerShellScriptFunction,\n  powershell,\n} from './commandWithProgress';\nimport * as build from './build';\nimport {BuildConfig, RunWindowsOptions} from '../runWindowsOptions';\nimport MSBuildTools from './msbuildtools';\nimport {Config} from '@react-native-community/cli-types';\nimport * as configUtils from '../../config/configUtils';\nimport {WindowsProjectConfig} from '../../config/projectConfig';\nimport {CodedError} from '@react-native-windows/telemetry';\nimport Version from './version';\n\nfunction pushd(pathArg: string): () => void {\n  const cwd = process.cwd();\n  process.chdir(pathArg);\n  return () => process.chdir(cwd);\n}\n\nexport function getBuildConfiguration(options: RunWindowsOptions): BuildConfig {\n  return options.release\n    ? options.bundle\n      ? 'ReleaseBundle'\n      : 'Release'\n    : options.bundle\n    ? 'DebugBundle'\n    : 'Debug';\n}\n\nfunction shouldDeployByPackage(\n  options: RunWindowsOptions,\n  config: Config,\n): boolean {\n  if (options.deployFromLayout) {\n    // Force deploy by layout\n    return false;\n  }\n\n  let hasAppxSigningEnabled: boolean | null = null;\n  let hasPackageCertificateKeyFile: boolean | null = null;\n\n  // TODO: These two properties should really be determined by\n  // getting the actual values msbuild used during the build,\n  // but for now we'll try to get them manually\n\n  // Check passed in msbuild property overrides\n  if (options.msbuildprops) {\n    const msbuildprops = build.parseMsBuildProps(options);\n    if ('AppxSigningEnabled' in msbuildprops) {\n      hasAppxSigningEnabled =\n        msbuildprops.AppxSigningEnabled.toLowerCase() === 'true';\n    }\n    if ('PackageCertificateKeyFile' in msbuildprops) {\n      hasPackageCertificateKeyFile = true;\n    }\n  }\n\n  // If at least one override wasn't set, we need to parse the project file\n  if (hasAppxSigningEnabled === null || hasPackageCertificateKeyFile === null) {\n    const projectFile = build.getAppProjectFile(options, config);\n    if (projectFile) {\n      const projectContents = configUtils.readProjectFile(projectFile);\n\n      // Find AppxSigningEnabled\n      if (hasAppxSigningEnabled === null) {\n        const appxSigningEnabled = configUtils.tryFindPropertyValue(\n          projectContents,\n          'AppxSigningEnabled',\n        );\n        if (appxSigningEnabled !== null) {\n          hasAppxSigningEnabled = appxSigningEnabled.toLowerCase() === 'true';\n        }\n      }\n\n      // Find PackageCertificateKeyFile\n      if (hasPackageCertificateKeyFile === null) {\n        const packageCertificateKeyFile = configUtils.tryFindPropertyValue(\n          projectContents,\n          'PackageCertificateKeyFile',\n        );\n        if (packageCertificateKeyFile !== null) {\n          hasPackageCertificateKeyFile = true;\n        }\n      }\n    }\n  }\n\n  return (\n    hasAppxSigningEnabled === true && hasPackageCertificateKeyFile === true\n  );\n}\n\nfunction shouldLaunchApp(options: RunWindowsOptions): boolean {\n  return options.launch === true;\n}\n\nfunction getAppPackage(\n  options: RunWindowsOptions,\n  projectName?: string,\n): string {\n  const configuration = getBuildConfiguration(options);\n  const packageFolder =\n    options.arch === 'x86'\n      ? `{*_x86_${configuration}_*,*_Win32_${configuration}_*}`\n      : `*_${options.arch}_${configuration}_*`;\n\n  const appPackageGlob = `${options.root}/windows/{*/AppPackages,AppPackages/*}/${packageFolder}`;\n  const appPackageCandidates = glob.sync(appPackageGlob);\n  let appPackage;\n  if (appPackageCandidates.length === 1 || !projectName) {\n    appPackage = appPackageCandidates[0];\n  } else if (appPackageCandidates.length > 1) {\n    const filteredAppPackageCandidates = appPackageCandidates.filter(x =>\n      x.includes(projectName),\n    );\n    if (filteredAppPackageCandidates.length >= 1) {\n      appPackage = filteredAppPackageCandidates[0];\n    }\n  }\n\n  if (!appPackage && options.release) {\n    // in the latest vs, Release is removed\n    newWarn(\n      'No package found in *_Release_* folder, removing the _Release_ prefix and checking again',\n    );\n\n    const rootGlob = `${options.root}/windows/{*/AppPackages,AppPackages/*}`;\n    const newGlob = `${rootGlob}/*_${\n      options.arch === 'x86' ? '{Win32,x86}' : options.arch\n    }_Test`;\n\n    const result = glob.sync(newGlob);\n    if (result.length > 1 && projectName) {\n      const newFilteredGlobs = result.filter(x => x.includes(projectName));\n      if (newFilteredGlobs.length >= 1) {\n        newWarn(`More than one app package found: ${result}`);\n      }\n      appPackage = newFilteredGlobs[0];\n    } else if (result.length === 1) {\n      // we're good\n      appPackage = result[0];\n    }\n  }\n\n  if (!appPackage) {\n    throw new CodedError(\n      'NoAppPackage',\n      `Unable to find app package using search path: \"${appPackageGlob}\"`,\n    );\n  }\n  return appPackage;\n}\n\nfunction getWindowsStoreAppUtils(options: RunWindowsOptions) {\n  const popd = pushd(options.root);\n  const windowsStoreAppUtilsPath = path.resolve(\n    __dirname,\n    '..',\n    '..',\n    '..',\n    'powershell',\n    'WindowsStoreAppUtils.ps1',\n  );\n  execSync(\n    `${powershell} -NoProfile Unblock-File '${windowsStoreAppUtilsPath}'`,\n  );\n  popd();\n  return windowsStoreAppUtilsPath;\n}\n\nfunction getAppxManifestPath(\n  options: RunWindowsOptions,\n  projectName?: string,\n): string {\n  const configuration = getBuildConfiguration(options);\n  // C++ x86 manifest would go under windows/Debug whereas x64 goes under windows/x64/Debug\n  // If we've built both, this causes us to end up with two matches, so we have to carefully select the right folder\n  let archFolder;\n  if (options.arch !== 'x86') {\n    archFolder = `${options.arch}/${configuration}`;\n  } else {\n    archFolder = `${configuration}`;\n  }\n\n  const appxManifestGlob = `windows/{*/bin/${options.arch}/${configuration},${archFolder}/*,target/${options.arch}/${configuration}}/AppxManifest.xml`;\n  const globs = glob.sync(path.join(options.root, appxManifestGlob));\n  let appxPath: string;\n  if (globs.length === 1 || !projectName) {\n    appxPath = globs[0];\n  } else {\n    const filteredGlobs = globs.filter(x => x.includes(projectName));\n    appxPath = filteredGlobs[0];\n    if (filteredGlobs.length > 1) {\n      newWarn(\n        `More than one appxmanifest for ${projectName}: ${filteredGlobs.join(\n          ',',\n        )}`,\n      );\n      newWarn(`Choosing ${appxPath}`);\n    }\n  }\n\n  if (!appxPath) {\n    throw new CodedError(\n      'NoAppxManifest',\n      `Unable to find AppxManifest from \"${options.root}\", using search path: \"${appxManifestGlob}\" `,\n    );\n  }\n  return appxPath;\n}\n\nfunction parseAppxManifest(appxManifestPath: string): parse.Document {\n  return parse(fs.readFileSync(appxManifestPath, 'utf8'));\n}\n\nfunction getAppxManifest(\n  options: RunWindowsOptions,\n  projectName?: string,\n): parse.Document {\n  return parseAppxManifest(getAppxManifestPath(options, projectName));\n}\n\nfunction handleResponseError(e: Error): never {\n  if (e.message.indexOf('Error code -2146233088')) {\n    throw new CodedError(\n      'NoDevice',\n      `No Windows Mobile device was detected: ${e.message}`,\n    );\n  } else {\n    throw new CodedError(\n      'AppDidNotDeploy',\n      `Unexpected error deploying app: ${e.message}`,\n    );\n  }\n}\n\n// Errors: 0x80073d10 - bad architecture\nexport async function deployToDevice(\n  options: RunWindowsOptions,\n  verbose: boolean,\n  config: Config,\n) {\n  const windowsConfig: Partial<WindowsProjectConfig> | undefined =\n    config.project.windows;\n  const projectName =\n    windowsConfig && windowsConfig.project && windowsConfig.project.projectName\n      ? windowsConfig.project.projectName\n      : path.parse(options.proj!).name;\n  const appPackageFolder = getAppPackage(options);\n\n  const deployTarget = options.target\n    ? options.target\n    : options.emulator\n    ? 'emulator'\n    : 'device';\n  const deployTool = new WinAppDeployTool();\n  const appxManifest = getAppxManifest(options, projectName);\n  const shouldLaunch = shouldLaunchApp(options);\n  const identity = appxManifest.root.children.filter(x => {\n    return x.name === 'mp:PhoneIdentity';\n  })[0];\n  const appName = identity.attributes.PhoneProductId;\n\n  const device = deployTool.findDevice(deployTarget);\n\n  try {\n    await deployTool.uninstallAppPackage(appName, device, verbose);\n  } catch (e) {\n    newWarn('Failed to uninstall app from ' + device.name);\n  }\n\n  const appxFile = glob.sync(path.join(appPackageFolder, '*.appx'))[0];\n  try {\n    await deployTool.installAppPackage(\n      appxFile,\n      device,\n      shouldLaunch,\n      false,\n      verbose,\n    );\n  } catch (e) {\n    if ((e as Error).message.includes('Error code 2148734208 for command')) {\n      await deployTool.installAppPackage(\n        appxFile,\n        device,\n        shouldLaunch,\n        true,\n        verbose,\n      );\n    } else {\n      handleResponseError(e as Error);\n    }\n  }\n}\n\nexport async function deployToDesktop(\n  options: RunWindowsOptions,\n  verbose: boolean,\n  config: Config,\n  buildTools: MSBuildTools,\n) {\n  const windowsConfig: Partial<WindowsProjectConfig> | undefined =\n    config.project.windows;\n  const slnFile =\n    windowsConfig && windowsConfig.solutionFile && windowsConfig.sourceDir\n      ? path.join(windowsConfig.sourceDir, windowsConfig.solutionFile)\n      : options.sln!;\n  const projectName =\n    windowsConfig && windowsConfig.project && windowsConfig.project.projectName\n      ? windowsConfig.project.projectName\n      : path.parse(options.proj!).name;\n  const windowsStoreAppUtils = getWindowsStoreAppUtils(options);\n  const appxManifestPath = getAppxManifestPath(options, projectName);\n  const appxManifest = parseAppxManifest(appxManifestPath);\n  const identity = appxManifest.root.children.filter(x => {\n    return x.name === 'Identity';\n  })[0];\n  const appName = identity.attributes.Name;\n\n  const vsVersion = Version.fromString(buildTools.installationVersion);\n\n  const args = [];\n  if (options.remoteDebugging) {\n    args.push('--remote-debugging');\n  }\n\n  if (options.directDebugging) {\n    args.push('--direct-debugging', options.directDebugging.toString());\n  }\n\n  await runPowerShellScriptFunction(\n    'Enabling Developer Mode',\n    windowsStoreAppUtils,\n    'EnableDevMode',\n    verbose,\n    'EnableDevModeFailure',\n  );\n\n  const appPackageFolder = getAppPackage(options, projectName);\n\n  if (shouldDeployByPackage(options, config)) {\n    // Deploy by package\n    await runPowerShellScriptFunction(\n      'Removing old version of the app',\n      windowsStoreAppUtils,\n      `Uninstall-App ${appName}`,\n      verbose,\n      'RemoveOldAppVersionFailure',\n    );\n\n    const script = glob.sync(\n      path.join(appPackageFolder, 'Add-AppDevPackage.ps1'),\n    )[0];\n\n    await runPowerShellScriptFunction(\n      'Installing new version of the app',\n      windowsStoreAppUtils,\n      `Install-App \"${script}\" -Force`,\n      verbose,\n      'InstallAppFailure',\n    );\n  } else {\n    // Deploy from layout\n    // If we have DeployAppRecipe.exe, use it (start in 16.8.4, earlier 16.8 versions have bugs)\n    const appxRecipe = path.join(\n      path.dirname(appxManifestPath),\n      `${projectName}.build.appxrecipe`,\n    );\n    const ideFolder = `${buildTools.installationPath}\\\\Common7\\\\IDE`;\n    const deployAppxRecipeExePath = `${ideFolder}\\\\DeployAppRecipe.exe`;\n    if (\n      vsVersion.gte(Version.fromString('16.8.30906.45')) &&\n      fs.existsSync(deployAppxRecipeExePath)\n    ) {\n      await commandWithProgress(\n        newSpinner('Deploying'),\n        `Deploying ${appxRecipe}`,\n        deployAppxRecipeExePath,\n        [appxRecipe],\n        verbose,\n        'DeployRecipeFailure',\n      );\n    } else {\n      // Install the app package's dependencies before attempting to deploy.\n      await runPowerShellScriptFunction(\n        'Installing dependent framework packages',\n        windowsStoreAppUtils,\n        `Install-AppDependencies ${appxManifestPath} ${appPackageFolder} ${options.arch}`,\n        verbose,\n        'InstallAppDependenciesFailure',\n      );\n      await build.buildSolution(\n        buildTools,\n        slnFile,\n        /* options.release ? 'Release' : */ 'Debug',\n        options.arch,\n        {DeployLayout: 'true'},\n        verbose,\n        'deploy',\n        options.buildLogDirectory,\n      );\n    }\n  }\n\n  const appFamilyName = execSync(\n    `${powershell} -NoProfile -c $(Get-AppxPackage -Name ${appName}).PackageFamilyName`,\n  )\n    .toString()\n    .trim();\n\n  if (!appFamilyName) {\n    throw new CodedError(\n      'AppDidNotDeploy',\n      'Fail to check the installed app, maybe developer mode is off on Windows',\n    );\n  }\n\n  const loopbackText = 'Verifying loopbackExempt';\n  const loopbackSpinner = newSpinner(loopbackText);\n\n  await commandWithProgress(\n    loopbackSpinner,\n    loopbackText,\n    'CheckNetIsolation',\n    `LoopbackExempt -a -n=${appFamilyName}`.split(' '),\n    verbose,\n    'CheckNetIsolationFailure',\n  );\n\n  if (shouldLaunchApp(options)) {\n    await runPowerShellScriptFunction(\n      'Starting the app',\n      windowsStoreAppUtils,\n      `Start-Locally ${appName} ${args}`,\n      verbose,\n      'AppStartupFailure',\n    );\n  } else {\n    newInfo('Skip the step to start the app');\n  }\n}\n\nexport function startServerInNewWindow(\n  options: RunWindowsOptions,\n  verbose: boolean,\n): Promise<void> {\n  return new Promise(resolve => {\n    http\n      .get('http://localhost:8081/status', res => {\n        if (res.statusCode === 200) {\n          newSuccess('React-Native Server already started');\n        } else {\n          newError('React-Native Server not responding');\n        }\n        resolve();\n      })\n      .on('error', () => {\n        launchServer(options, verbose);\n        resolve();\n      });\n  });\n}\n\nfunction launchServer(options: RunWindowsOptions, verbose: boolean) {\n  newSuccess('Starting the React-Native Server');\n  const opts: SpawnOptions = {\n    cwd: options.root,\n    detached: true,\n    stdio: verbose ? 'inherit' : 'ignore',\n  };\n\n  spawn('cmd.exe', ['/C', 'start npx react-native start'], opts);\n}\n"]}