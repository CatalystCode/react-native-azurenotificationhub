{"version":3,"file":"build.js","sourceRoot":"","sources":["../../../src/runWindows/utils/build.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n * @format\n */\n\nimport path from 'path';\n\nimport MSBuildTools from './msbuildtools';\nimport Version from './version';\nimport {newError} from './commandWithProgress';\nimport {RunWindowsOptions, BuildConfig, BuildArch} from '../runWindowsOptions';\nimport {Config} from '@react-native-community/cli-types';\nimport {CodedError} from '@react-native-windows/telemetry';\n\nexport async function buildSolution(\n  buildTools: MSBuildTools,\n  slnFile: string,\n  buildType: BuildConfig,\n  buildArch: BuildArch,\n  msBuildProps: Record<string, string>,\n  verbose: boolean,\n  target: 'build' | 'deploy',\n  buildLogDirectory?: string,\n  singleproc?: boolean,\n) {\n  const minVersion = new Version(10, 0, 19041, 0);\n  const allVersions = MSBuildTools.getAllAvailableUAPVersions();\n  if (!allVersions.some(v => v.gte(minVersion))) {\n    throw new CodedError(\n      'MinSDKVersionNotMet',\n      'Must have a minimum Windows SDK version 10.0.19041.0 installed',\n    );\n  }\n\n  await buildTools.buildProject(\n    slnFile,\n    buildType,\n    buildArch,\n    msBuildProps,\n    verbose,\n    target,\n    buildLogDirectory,\n    singleproc,\n  );\n}\n\nconst configErrorString = 'Error: ';\n\nexport function getAppSolutionFile(options: RunWindowsOptions, config: Config) {\n  // Use the solution file if specified\n  if (options.sln) {\n    return path.join(options.root, options.sln);\n  }\n\n  // Check the answer from react-native config\n  const windowsAppConfig = config.project.windows;\n  if (!windowsAppConfig) {\n    throw new CodedError(\n      'NoWindowsConfig',\n      \"Couldn't determine Windows app config\",\n    );\n  }\n  const configSolutionFile = windowsAppConfig.solutionFile;\n\n  if (configSolutionFile.startsWith(configErrorString)) {\n    newError(\n      configSolutionFile.substr(configErrorString.length) +\n        ' Optionally, use --sln {slnFile}.',\n    );\n    return null;\n  } else {\n    return path.join(\n      windowsAppConfig.folder,\n      windowsAppConfig.sourceDir,\n      configSolutionFile,\n    );\n  }\n}\n\nexport function getAppProjectFile(options: RunWindowsOptions, config: Config) {\n  // Use the project file if specified\n  if (options.proj) {\n    return path.join(options.root, options.proj);\n  }\n\n  // Check the answer from react-native config\n  const windowsAppConfig = config.project.windows;\n  const configProject = windowsAppConfig.project;\n\n  if (\n    typeof configProject === 'string' &&\n    configProject.startsWith(configErrorString)\n  ) {\n    newError(\n      configProject.substr(configErrorString.length) +\n        ' Optionally, use --proj {projFile}.',\n    );\n    return null;\n  } else {\n    const configProjectFile = configProject.projectFile;\n    if (configProjectFile.startsWith(configErrorString)) {\n      newError(\n        configProjectFile.substr(configErrorString.length) +\n          ' Optionally, use --proj {projFile}.',\n      );\n      return null;\n    }\n    return path.join(\n      windowsAppConfig.folder,\n      windowsAppConfig.sourceDir,\n      configProjectFile,\n    );\n  }\n}\n\nexport function parseMsBuildProps(\n  options: RunWindowsOptions,\n): Record<string, string> {\n  const result: Record<string, string> = {};\n  if (options.msbuildprops) {\n    const props = options.msbuildprops.split(',');\n    for (const prop of props) {\n      const propAssignment = prop.split('=');\n      result[propAssignment[0]] = propAssignment[1];\n    }\n  }\n  return result;\n}\n"]}