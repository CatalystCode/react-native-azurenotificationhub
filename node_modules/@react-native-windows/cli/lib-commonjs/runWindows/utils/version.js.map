{"version":3,"file":"version.js","sourceRoot":"","sources":["../../../src/runWindows/utils/version.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n * @format\n */\n\nconst VERSION_EXPRESSION = /^\\d{1,8}(\\.\\d{1,8}){0,3}$/;\n\nexport default class Version {\n  constructor(\n    private readonly major: number,\n    private readonly minor: number = 0,\n    private readonly build: number = 0,\n    private readonly qfe: number = 0,\n  ) {}\n\n  eq(other: Version): boolean {\n    if (other.constructor !== Version) {\n      throw new TypeError('other must be a Version instance');\n    }\n\n    return (\n      this.major === other.major &&\n      this.minor === other.minor &&\n      this.build === other.build &&\n      this.qfe === other.qfe\n    );\n  }\n\n  gt(other: Version): boolean {\n    if (other.constructor !== Version) {\n      throw new TypeError('other must be a Version instance');\n    }\n\n    if (this.major > other.major) {\n      return true;\n    }\n    if (this.major < other.major) {\n      return false;\n    }\n    if (this.minor > other.minor) {\n      return true;\n    }\n    if (this.minor < other.minor) {\n      return false;\n    }\n    if (this.build > other.build) {\n      return true;\n    }\n    if (this.build < other.build) {\n      return false;\n    }\n    if (this.qfe > other.qfe) {\n      return true;\n    }\n    if (this.qfe < other.qfe) {\n      return false;\n    }\n\n    return false;\n  }\n\n  gte(other: Version): boolean {\n    if (other.constructor !== Version) {\n      throw new TypeError('other must be a Version instance');\n    }\n\n    if (this.major > other.major) {\n      return true;\n    }\n    if (this.major < other.major) {\n      return false;\n    }\n    if (this.minor > other.minor) {\n      return true;\n    }\n    if (this.minor < other.minor) {\n      return false;\n    }\n    if (this.build > other.build) {\n      return true;\n    }\n    if (this.build < other.build) {\n      return false;\n    }\n    if (this.qfe > other.qfe) {\n      return true;\n    }\n    if (this.qfe < other.qfe) {\n      return false;\n    }\n\n    return true;\n  }\n\n  toString(): string {\n    return `${this.major}.${this.minor}.${this.build}.${this.qfe}`;\n  }\n\n  static compare(x: Version, y: Version): number {\n    if (x.constructor !== Version || y.constructor !== Version) {\n      throw new TypeError('Only can compare Version objects');\n    }\n\n    return x.gt(y) ? 1 : x.eq(y) ? 0 : -1;\n  }\n\n  static fromString(str: string): Version {\n    const version = Version.tryParse(str);\n    if (!version) {\n      throw new TypeError('Cannot construct a version from \"' + str + '\".');\n    }\n    return version;\n  }\n\n  static tryParse(str: string): Version | null {\n    if (VERSION_EXPRESSION.test(str)) {\n      const versionArray = str.split('.').map(x => parseInt(x, 10));\n      return new Version(\n        versionArray[0],\n        versionArray[1],\n        versionArray[2],\n        versionArray[3],\n      );\n    }\n    return null;\n  }\n}\n"]}