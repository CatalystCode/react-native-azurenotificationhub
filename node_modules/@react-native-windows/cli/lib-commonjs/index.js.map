{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;;;;;;;;;;;;;;;;;;AAEH,kEAA0C;AAC1C,gDAAwB;AAExB,2DAG6B;AAE7B,0DAA4D;AAC5D,wDAA0D;AAC1D,gEAAkE;AAClE,0DAA4D;AAiC5D;;;;;;;GAOG;AACI,KAAK,UAAU,eAAe,CACnC,UAAkB,EAClB,IAAY,EACZ,EAAU,EACV,OAAwB;IAExB,IAAI,CAAC,YAAE,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;QAC9B,YAAE,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;KAC1B;IAED,MAAM,IAAA,iDAA6B,EAAC,OAAO,CAAC,CAAC;IAE7C,MAAM,UAAU,GAAG,cAAI,CAAC,OAAO,CAC7B,OAAO,CAAC,OAAO,CAAC,mCAAmC,EAAE;QACnD,KAAK,EAAE,CAAC,UAAU,CAAC;KACpB,CAAC,CACH,CAAC;IACF,MAAM,YAAY,GAAG,cAAI,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IACvD,MAAM,IAAA,iDAA6B,EACjC,YAAY,EACZ,UAAU,EACV,IAAI,EACJ,EAAE,EACF,OAAO,CACR,CAAC;AACJ,CAAC;AAzBD,0CAyBC;AAED,iEAAiE;AACjE,MAAM,qBAAqB,GAOf,IAAI,CAAC;AACjB,qBAAqB,CAAC;AAET,QAAA,QAAQ,GAAG,CAAC,0BAAe,EAAE,8BAAiB,CAAC,CAAC;AAChD,QAAA,gBAAgB,GAAG,0CAAuB,CAAC;AAC3C,QAAA,aAAa,GAAG,oCAAoB,CAAC;AAClD,iDAA+B","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n * @format\n */\n\nimport fs from '@react-native-windows/fs';\nimport path from 'path';\n\nimport {\n  copyProjectTemplateAndReplace,\n  installScriptsAndDependencies,\n} from './generator-windows';\n\nimport {autoLinkCommand} from './runWindows/utils/autolink';\nimport {runWindowsCommand} from './runWindows/runWindows';\nimport {dependencyConfigWindows} from './config/dependencyConfig';\nimport {projectConfigWindows} from './config/projectConfig';\n\n/**\n * Project generation options\n *\n *      _\n *     | |\n *   __| | __ _ _ __   __ _  ___ _ __\n *  / _` |/ _` | '_ \\ / _` |/ _ \\ '__|\n * | (_| | (_| | | | | (_| |  __/ |\n *  \\__,_|\\__,_|_| |_|\\__, |\\___|_|\n *                     __/ |\n *                    |___/\n *\n *\n * Properties on this interface must remain stable, as new versions of\n * react-native-windows-init may be used with local-cli dating back to 0.61.\n * All existing arguments must work correctly when changing this interface.\n */\nexport interface GenerateOptions {\n  overwrite: boolean;\n  language: 'cpp' | 'cs';\n  projectType: 'app' | 'lib';\n  experimentalNuGetDependency: boolean;\n  nuGetTestVersion?: string;\n  nuGetTestFeed?: string;\n  useWinUI3: boolean;\n  useHermes: boolean;\n  useDevMode: boolean;\n  verbose: boolean;\n  telemetry: boolean;\n}\n\n/**\n * Simple utility for running the Windows generator.\n *\n * @param  projectDir root project directory (i.e. contains index.js)\n * @param  name       name of the root JS module for this app\n * @param  ns         namespace for the project\n * @param  options    command line options container\n */\nexport async function generateWindows(\n  projectDir: string,\n  name: string,\n  ns: string,\n  options: GenerateOptions,\n) {\n  if (!fs.existsSync(projectDir)) {\n    fs.mkdirSync(projectDir);\n  }\n\n  await installScriptsAndDependencies(options);\n\n  const rnwPackage = path.dirname(\n    require.resolve('react-native-windows/package.json', {\n      paths: [projectDir],\n    }),\n  );\n  const templateRoot = path.join(rnwPackage, 'template');\n  await copyProjectTemplateAndReplace(\n    templateRoot,\n    projectDir,\n    name,\n    ns,\n    options,\n  );\n}\n\n// Assert the interface here doesn't change for the reasons above\nconst assertStableInterface: typeof generateWindows extends (\n  projectDir: string,\n  name: string,\n  ns: string,\n  options: GenerateOptions,\n) => Promise<void>\n  ? true\n  : never = true;\nassertStableInterface;\n\nexport const commands = [autoLinkCommand, runWindowsCommand];\nexport const dependencyConfig = dependencyConfigWindows;\nexport const projectConfig = projectConfigWindows;\nexport * from './healthChecks';\n"]}