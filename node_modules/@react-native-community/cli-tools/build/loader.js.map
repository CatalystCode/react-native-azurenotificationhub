{"version":3,"sources":["../src/loader.ts"],"names":["OraNoop","spinner","interval","frames","indent","isSpinning","text","prefixText","color","succeed","_text","fail","start","stop","warn","info","stopAndPersist","clear","render","frame","getLoader","options","logger","isVerbose","NoopLoader"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;;;;AAIA,MAAMA,OAAN,CAAgC;AAC9BC,EAAAA,OAAO,GAAY;AAACC,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAAZ;AACPC,EAAAA,MAAM,GAAW,CAAX;AACNC,EAAAA,UAAU,GAAY,KAAZ;AACVC,EAAAA,IAAI,GAAW,EAAX;AACJC,EAAAA,UAAU,GAAW,EAAX;AACVC,EAAAA,KAAK,GAAU,MAAV;;AAELC,EAAAA,OAAO,CAACC,KAAD,EAA6B;AAClC,WAAO,IAAP;AACD;;AACDC,EAAAA,IAAI,CAACD,KAAD,EAAiB;AACnB,WAAO,IAAP;AACD;;AACDE,EAAAA,KAAK,CAACF,KAAD,EAAiB;AACpB,WAAO,IAAP;AACD;;AACDG,EAAAA,IAAI,GAAG;AACL,WAAO,IAAP;AACD;;AACDC,EAAAA,IAAI,CAACJ,KAAD,EAAiB;AACnB,WAAO,IAAP;AACD;;AACDK,EAAAA,IAAI,CAACL,KAAD,EAAiB;AACnB,WAAO,IAAP;AACD;;AACDM,EAAAA,cAAc,GAAG;AACf,WAAO,IAAP;AACD;;AACDC,EAAAA,KAAK,GAAG;AACN,WAAO,IAAP;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WAAO,IAAP;AACD;;AACDC,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKb,IAAZ;AACD;;AArC6B;;AAwCzB,SAASc,SAAT,CAAmBC,OAAnB,EAAmE;AACxE,SAAOC,gBAAOC,SAAP,KAAqB,IAAIvB,OAAJ,EAArB,GAAqC,oBAAIqB,OAAJ,CAA5C;AACD;;AAEM,MAAMG,UAAU,GAAGxB,OAAnB","sourcesContent":["import ora from 'ora';\nimport type {Ora, Options, Spinner, Color} from 'ora';\nimport logger from './logger';\n\nexport type Loader = Ora;\n\nclass OraNoop implements Loader {\n  spinner: Spinner = {interval: 1, frames: []};\n  indent: number = 0;\n  isSpinning: boolean = false;\n  text: string = '';\n  prefixText: string = '';\n  color: Color = 'blue';\n\n  succeed(_text?: string | undefined) {\n    return this;\n  }\n  fail(_text?: string) {\n    return this;\n  }\n  start(_text?: string) {\n    return this;\n  }\n  stop() {\n    return this;\n  }\n  warn(_text?: string) {\n    return this;\n  }\n  info(_text?: string) {\n    return this;\n  }\n  stopAndPersist() {\n    return this;\n  }\n  clear() {\n    return this;\n  }\n  render() {\n    return this;\n  }\n  frame() {\n    return this.text;\n  }\n}\n\nexport function getLoader(options?: string | Options | undefined): Loader {\n  return logger.isVerbose() ? new OraNoop() : ora(options);\n}\n\nexport const NoopLoader = OraNoop;\n"]}