{"version":3,"sources":["../../src/tools/checkInstallation.ts"],"names":["PACKAGE_MANAGERS","isSoftwareNotInstalled","command","_ignored","doesSoftwareNeedToBeFixed","version","versionRange","looseRange","coercedVersion","semver","coerce","loose","satisfies"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;IAEYA,gB;;;WAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;GAAAA,gB,gCAAAA,gB;;AAKZ,MAAMC,sBAAsB,GAAG,MAAOC,OAAP,IAA6C;AAC1E,MAAI;AACF,UAAM,8BAAcA,OAAd,CAAN;AAEA,WAAO,KAAP;AACD,GAJD,CAIE,OAAOC,QAAP,EAAiB;AACjB,WAAO,IAAP;AACD;AACF,CARD;;;;AAUA,MAAMC,yBAAyB,GAAG,CAAC;AACjCC,EAAAA,OADiC;AAEjCC,EAAAA,YAFiC;AAGjCC,EAAAA,UAAU,GAAG;AAHoB,CAAD,KAQnB;AACb,QAAMC,cAAc,GAAGC,kBAAOC,MAAP,CAAcL,OAAd,EAAuB;AAACM,IAAAA,KAAK,EAAEJ;AAAR,GAAvB,CAAvB;;AAEA,SACEF,OAAO,KAAK,WAAZ,IACAG,cAAc,KAAK,IADnB,IAEA,CAACC,kBAAOG,SAAP,CAAiBJ,cAAjB,EAAiCF,YAAjC,CAHH;AAKD,CAhBD","sourcesContent":["import semver from 'semver';\nimport commandExists from 'command-exists';\n\nexport enum PACKAGE_MANAGERS {\n  YARN = 'YARN',\n  NPM = 'NPM',\n}\n\nconst isSoftwareNotInstalled = async (command: string): Promise<boolean> => {\n  try {\n    await commandExists(command);\n\n    return false;\n  } catch (_ignored) {\n    return true;\n  }\n};\n\nconst doesSoftwareNeedToBeFixed = ({\n  version,\n  versionRange,\n  looseRange = false,\n}: {\n  version: string;\n  versionRange: string;\n  looseRange?: boolean;\n}): boolean => {\n  const coercedVersion = semver.coerce(version, {loose: looseRange});\n\n  return (\n    version === 'Not Found' ||\n    coercedVersion === null ||\n    !semver.satisfies(coercedVersion, versionRange)\n  );\n};\n\nexport {isSoftwareNotInstalled, doesSoftwareNeedToBeFixed};\n"]}