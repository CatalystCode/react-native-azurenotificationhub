{"version":3,"sources":["../../src/ui/debuggerWorker.js"],"names":["onmessage","visibilityState","showVisibilityWarning","hasWarned","console","warn","toString","includes","messageHandlers","executeApplicationScript","message","sendReply","key","inject","self","JSON","parse","error","importScripts","url","err","setDebuggerVisibility","object","data","result","postMessage","replyID","id","handler","method","returnValue","__fbBatchedBridge","apply","arguments","stringify"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AAEAA,SAAS,GAAI,YAAY;AACvB,MAAIC,eAAJ;;AACA,MAAIC,qBAAqB,GAAI,YAAY;AACvC,QAAIC,SAAS,GAAG,KAAhB;AACA,WAAO,YAAY;AACjB;AACA,UAAIA,SAAS,IAAIC,OAAO,CAACC,IAAR,CAAaC,QAAb,GAAwBC,QAAxB,CAAiC,eAAjC,CAAjB,EAAoE;AAClE;AACD;;AACDJ,MAAAA,SAAS,GAAG,IAAZ;AACAC,MAAAA,OAAO,CAACC,IAAR,CACE,oEACE,sEADF,GAEE,qBAHJ;AAKD,KAXD;AAYD,GAd2B,EAA5B;;AAgBA,MAAIG,eAAe,GAAG;AACpBC,IAAAA,wBAAwB,EAAE,UAAUC,OAAV,EAAmBC,SAAnB,EAA8B;AACtD,WAAK,IAAIC,GAAT,IAAgBF,OAAO,CAACG,MAAxB,EAAgC;AAC9BC,QAAAA,IAAI,CAACF,GAAD,CAAJ,GAAYG,IAAI,CAACC,KAAL,CAAWN,OAAO,CAACG,MAAR,CAAeD,GAAf,CAAX,CAAZ;AACD;;AACD,UAAIK,KAAJ;;AACA,UAAI;AACFC,QAAAA,aAAa,CAACR,OAAO,CAACS,GAAT,CAAb;AACD,OAFD,CAEE,OAAOC,GAAP,EAAY;AACZH,QAAAA,KAAK,GAAGG,GAAG,CAACV,OAAZ;AACD;;AACDC,MAAAA,SAAS,CAAC;AAAK;AAAN,QAAoBM,KAApB,CAAT;AACD,KAZmB;AAapBI,IAAAA,qBAAqB,EAAE,UAAUX,OAAV,EAAmB;AACxCT,MAAAA,eAAe,GAAGS,OAAO,CAACT,eAA1B;AACD;AAfmB,GAAtB;AAkBA,SAAO,UAAUS,OAAV,EAAmB;AACxB,QAAIT,eAAe,KAAK,QAAxB,EAAkC;AAChCC,MAAAA,qBAAqB;AACtB;;AAED,QAAIoB,MAAM,GAAGZ,OAAO,CAACa,IAArB;;AAEA,QAAIZ,SAAS,GAAG,UAAUa,MAAV,EAAkBP,KAAlB,EAAyB;AACvCQ,MAAAA,WAAW,CAAC;AAACC,QAAAA,OAAO,EAAEJ,MAAM,CAACK,EAAjB;AAAqBH,QAAAA,MAAM,EAAEA,MAA7B;AAAqCP,QAAAA,KAAK,EAAEA;AAA5C,OAAD,CAAX;AACD,KAFD;;AAIA,QAAIW,OAAO,GAAGpB,eAAe,CAACc,MAAM,CAACO,MAAR,CAA7B;;AACA,QAAID,OAAJ,EAAa;AACX;AACAA,MAAAA,OAAO,CAACN,MAAD,EAASX,SAAT,CAAP;AACD,KAHD,MAGO;AACL;AACA,UAAImB,WAAW,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,CAAlB;AACA,UAAIb,KAAJ;;AACA,UAAI;AACF,YAAI,OAAOc,iBAAP,KAA6B,QAAjC,EAA2C;AACzCD,UAAAA,WAAW,GAAGC,iBAAiB,CAACT,MAAM,CAACO,MAAR,CAAjB,CAAiCG,KAAjC,CACZ,IADY,EAEZV,MAAM,CAACW,SAFK,CAAd;AAID,SALD,MAKO;AACLhB,UAAAA,KAAK,GAAG,yDAAR;AACD;AACF,OATD,CASE,OAAOG,GAAP,EAAY;AACZH,QAAAA,KAAK,GAAGG,GAAG,CAACV,OAAZ;AACD,OAXD,SAWU;AACRC,QAAAA,SAAS,CAACI,IAAI,CAACmB,SAAL,CAAeJ,WAAf,CAAD,EAA8Bb,KAA9B,CAAT;AACD;AACF;AACF,GAlCD;AAmCD,CAvEW,EAAZ","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/* global __fbBatchedBridge, self, importScripts, postMessage, onmessage: true */\n/* eslint no-unused-vars: 0 */\n\nonmessage = (function () {\n  var visibilityState;\n  var showVisibilityWarning = (function () {\n    var hasWarned = false;\n    return function () {\n      // Wait until `YellowBox` gets initialized before displaying the warning.\n      if (hasWarned || console.warn.toString().includes('[native code]')) {\n        return;\n      }\n      hasWarned = true;\n      console.warn(\n        'Remote debugger is in a background tab which may cause apps to ' +\n          'perform slowly. Fix this by foregrounding the tab (or opening it in ' +\n          'a separate window).',\n      );\n    };\n  })();\n\n  var messageHandlers = {\n    executeApplicationScript: function (message, sendReply) {\n      for (var key in message.inject) {\n        self[key] = JSON.parse(message.inject[key]);\n      }\n      var error;\n      try {\n        importScripts(message.url);\n      } catch (err) {\n        error = err.message;\n      }\n      sendReply(null /* result */, error);\n    },\n    setDebuggerVisibility: function (message) {\n      visibilityState = message.visibilityState;\n    },\n  };\n\n  return function (message) {\n    if (visibilityState === 'hidden') {\n      showVisibilityWarning();\n    }\n\n    var object = message.data;\n\n    var sendReply = function (result, error) {\n      postMessage({replyID: object.id, result: result, error: error});\n    };\n\n    var handler = messageHandlers[object.method];\n    if (handler) {\n      // Special cased handlers\n      handler(object, sendReply);\n    } else {\n      // Other methods get called on the bridge\n      var returnValue = [[], [], [], 0];\n      var error;\n      try {\n        if (typeof __fbBatchedBridge === 'object') {\n          returnValue = __fbBatchedBridge[object.method].apply(\n            null,\n            object.arguments,\n          );\n        } else {\n          error = 'Failed to call function, __fbBatchedBridge is undefined';\n        }\n      } catch (err) {\n        error = err.message;\n      } finally {\n        sendReply(JSON.stringify(returnValue), error);\n      }\n    }\n  };\n})();\n"]}