{"version":3,"sources":["../../src/config/extractComponentDescriptors.ts"],"names":["CODEGEN_NATIVE_COMPONENT_REGEX","extractComponentDescriptors","contents","match"],"mappings":";;;;;;AAAA;AACA;AACA,MAAMA,8BAA8B,GAAG,yFAAvC;;AAEO,SAASC,2BAAT,CAAqCC,QAArC,EAAuD;AAC5D,QAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAT,CAAeH,8BAAf,CAAd;;AACA,MAAI,EAAE,CAAAG,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAG,CAAH,CAAL,MAAe,MAAjB,MAA4BA,KAA5B,aAA4BA,KAA5B,uBAA4BA,KAAK,CAAG,CAAH,CAAjC,CAAJ,EAA4C;AAC1C,WAAQ,GAAEA,KAAK,CAAC,CAAD,CAAI,qBAAnB;AACD;;AACD,SAAO,IAAP;AACD","sourcesContent":["// TODO: avoid the regex and improve reliability by reading this data from codegen schema.json.\n// Need to find a way to run \"generateNewArchitectureFiles\" gradle task after each library's \"generateCodegenSchemaFromJavaScript\" task.\nconst CODEGEN_NATIVE_COMPONENT_REGEX = /codegenNativeComponent(<.*>)?\\s*\\(\\s*[\"'`](\\w+)[\"'`](,?[\\s\\S]+interfaceOnly:\\s*(\\w+))?/m;\n\nexport function extractComponentDescriptors(contents: string) {\n  const match = contents.match(CODEGEN_NATIVE_COMPONENT_REGEX);\n  if (!(match?.[4] === 'true') && match?.[2]) {\n    return `${match[2]}ComponentDescriptor`;\n  }\n  return null;\n}\n"]}