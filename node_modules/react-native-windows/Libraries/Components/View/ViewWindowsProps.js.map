{"version":3,"file":"ViewWindowsProps.js","sourceRoot":"","sources":["../../../src/Libraries/Components/View/ViewWindowsProps.ts"],"names":[],"mappings":";AAAA;;;;GAIG","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n * @format\n */\n\nimport {IKeyboardProps} from '../Keyboard/KeyboardExtProps';\nimport {NativeSyntheticEvent, ViewProps} from 'react-native';\n\nexport type INativeMouseEvent = {\n  target: number;\n  identifier: number;\n  pageX: number;\n  pageY: number;\n  locationX: number;\n  locationY: number;\n  timestamp: number;\n  pointerType: string;\n  force: number;\n  isLeftButton: boolean;\n  isRightButton: boolean;\n  isMiddleButton: boolean;\n  isBarrelButtonPressed: boolean;\n  isHorizontalScrollWheel: boolean;\n  isEraser: boolean;\n  shiftKey: boolean;\n  ctrlKey: boolean;\n  altKey: boolean;\n};\n\nexport type IMouseEvent = NativeSyntheticEvent<INativeMouseEvent>;\n\n/**\n * @remarks\n * Props type for ViewWindows component\n *\n * Extends: {@link IKeyboardProps} and {@link https://facebook.github.io/react-native/docs/view | react-native's ViewProps}\n */\nexport interface IViewWindowsProps extends IKeyboardProps, ViewProps {\n  children?: any;\n\n  /**\n   * Indicates to accessibility services that the UI Component is within a set and has the given numbered position.\n   *\n   * See https://github.com/ReactWindows/discussions-and-proposals/blob/harinik-accessibility/proposals/0000-accessibilityapis-lists.md\n   */\n  accessibilityPosInSet?: number;\n\n  /**\n   * Indicates to accessibility services that the UI Component is within a set with the given size.\n   *\n   * See https://github.com/ReactWindows/discussions-and-proposals/blob/harinik-accessibility/proposals/0000-accessibilityapis-lists.md\n   */\n  accessibilitySetSize?: number;\n\n  /**\n   * Specifies the Tooltip for the view\n   */\n  tooltip?: string;\n\n  /**\n   * Indicates the TabIndex to use for this view\n   */\n  tabIndex?: number;\n\n  /**\n   * Specifies if the control should show System focus visuals\n   */\n  enableFocusRing?: boolean;\n\n  /**\n   * Event fired when the mouse leaves the view\n   */\n  onMouseLeave?: (args: IMouseEvent) => void;\n\n  /**\n   * Event fired when the mouse enters the view\n   */\n  onMouseEnter?: (args: IMouseEvent) => void;\n}\n"]}