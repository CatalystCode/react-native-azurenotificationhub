{"version":3,"file":"KeyboardExt.js","sourceRoot":"","sources":["../../../src/Libraries/Components/Keyboard/KeyboardExt.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AACH,YAAY,CAAC;;;;;;AAEb,kDAA0B;AAGnB,MAAM,eAAe,GAAG,CAC7B,gBAAwC,EACxC,EAAE;IAUF,MAAM,eAAgB,SAAQ,eAAK,CAAC,SAAgC;QAC3D,MAAM;YACX,MAAM,EAAC,YAAY,EAAE,GAAG,IAAI,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YAC3C,OAAO,8BAAC,gBAAgB,IAAC,GAAG,EAAE,YAAY,KAAO,IAAU,GAAI,CAAC;QAClE,CAAC;KACF;IAED,OAAO,eAAK,CAAC,UAAU,CACrB,CAAC,KAA+B,EAAE,GAAmB,EAAE,EAAE;QACvD,OAAO,8BAAC,eAAe,OAAK,KAAK,EAAE,YAAY,EAAE,GAAG,GAAI,CAAC;IAC3D,CAAC,CACF,CAAC;AACJ,CAAC,CAAC;AAxBW,QAAA,eAAe,mBAwB1B","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n * @format\n */\n'use strict';\n\nimport React from 'react';\nimport {IKeyboardProps} from './KeyboardExtProps';\n\nexport const supportKeyboard = <P extends Record<string, any>>(\n  WrappedComponent: React.ComponentType<P>,\n) => {\n  interface IForwardRefProps {\n    forwardedRef: React.Ref<any>;\n  }\n\n  // children is used to avoid error: Property 'children' does not exist on type 'IntrinsicAttributes & ViewProps &\n  // IKeyboardProps & RefAttributes<any>\n  type PropsWithoutForwardedRef = P & IKeyboardProps & {children?: any};\n  type PropsWithForwardedRef = PropsWithoutForwardedRef & IForwardRefProps;\n\n  class SupportKeyboard extends React.Component<PropsWithForwardedRef> {\n    public render(): JSX.Element {\n      const {forwardedRef, ...rest} = this.props;\n      return <WrappedComponent ref={forwardedRef} {...(rest as P)} />;\n    }\n  }\n\n  return React.forwardRef(\n    (props: PropsWithoutForwardedRef, ref: React.Ref<any>) => {\n      return <SupportKeyboard {...props} forwardedRef={ref} />;\n    },\n  );\n};\n"]}