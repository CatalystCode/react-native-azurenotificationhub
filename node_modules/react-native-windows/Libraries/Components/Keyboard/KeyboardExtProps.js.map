{"version":3,"file":"KeyboardExtProps.js","sourceRoot":"","sources":["../../../src/Libraries/Components/Keyboard/KeyboardExtProps.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,YAAY,CAAC;;;AAIb,kCAAkC;AAClC,gDAAgD;AAChD,IAAY,UAKX;AALD,WAAY,UAAU;IACpB,2CAAQ,CAAA;IACR,qDAAS,CAAA;IACT,mDAAQ,CAAA;IACR,mDAAQ,CAAA;AACV,CAAC,EALW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAKrB;AAED,kCAAkC;AAClC,gDAAgD;AAChD,IAAY,iBAGX;AAHD,WAAY,iBAAiB;IAC3B,mEAAgC,CAAA;IAChC,iEAA8B,CAAA;AAChC,CAAC,EAHW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAG5B","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n * @format\n */\n\n'use strict';\n\nimport RN from 'react-native';\n\n// Enum already part of public API\n// eslint-disable-next-line no-restricted-syntax\nexport enum EventPhase {\n  None = 0,\n  Capturing,\n  AtTarget,\n  Bubbling,\n}\n\n// Enum already part of public API\n// eslint-disable-next-line no-restricted-syntax\nexport enum HandledEventPhase {\n  Capturing = EventPhase.Capturing,\n  Bubbling = EventPhase.Bubbling,\n}\n\nexport interface INativeKeyboardEvent {\n  altKey: boolean;\n  ctrlKey: boolean;\n  metaKey: boolean;\n  shiftKey: boolean;\n  key: string;\n  code: string;\n  eventPhase: EventPhase;\n}\n\nexport interface IHandledKeyboardEvent {\n  altKey?: boolean;\n  ctrlKey?: boolean;\n  metaKey?: boolean;\n  shiftKey?: boolean;\n  code: string;\n  handledEventPhase?: HandledEventPhase;\n}\n\nexport type IKeyboardEvent = RN.NativeSyntheticEvent<INativeKeyboardEvent>;\n\nexport interface IKeyboardProps {\n  onKeyDown?: (args: IKeyboardEvent) => void;\n  onKeyDownCapture?: (args: IKeyboardEvent) => void;\n  onKeyUp?: (args: IKeyboardEvent) => void;\n  onKeyUpCapture?: (args: IKeyboardEvent) => void;\n\n  keyDownEvents?: IHandledKeyboardEvent[];\n  keyUpEvents?: IHandledKeyboardEvent[];\n}\n"]}