{"version":3,"file":"StatusLogger.js","sourceRoot":"","sources":["../../Bootstrap/StatusLogger.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;AAEb,uBAAyB;AACzB,2BAA6B;AAG7B,2CAAmD;AACnD,uDAA6E;AAa7E;IAaI,sBAAmB,OAAwC,EAAE,kBAAsC;QAAhF,wBAAA,EAAA,iBAAwC;QAAE,mCAAA,EAAA,8BAAsC;QAAhF,YAAO,GAAP,OAAO,CAAiC;QACvD,YAAY,CAAC,cAAc,CAAC,IAAI,GAAG,kBAAkB,CAAC;IAC1D,CAAC;IAEM,gCAAS,GAAhB,UAAiB,IAAoB,EAAE,EAAyB;QAC5D,IAAI,OAAO,EAAE,KAAK,UAAU,IAAI,IAAI,CAAC,OAAO,YAAY,uBAAU,EAAE;YAChE,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC;SAC9B;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IArBsB,8BAAiB,GAAW,IAAI,CAAC,IAAI,CAAC,oBAAO,EAAE,QAAQ,CAAC,CAAC;IACzD,8BAAiB,GAAW,YAAU,EAAE,CAAC,QAAQ,EAAE,SAAI,OAAO,CAAC,GAAG,UAAO,CAAC;IAC1E,2BAAc,GAAmB;QACpD,4BAA4B,EAAE,KAAK;QACnC,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,SAAS;QACf,OAAO,EAAE,SAAS;QAClB,UAAU,EAAE,4CAAgC;QAC5C,WAAW,EAAE,EAAE,CAAC,QAAQ,EAAE;QAC1B,GAAG,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;KAC3B,CAAA;IAYL,mBAAC;CAAA,AAvBD,IAuBC;AAvBY,oCAAY","sourcesContent":["\"use strict\";\r\n\r\nimport * as os from \"os\";\r\nimport * as path from \"path\";\r\nimport * as fs from \"fs\";\r\nimport * as DataModel from \"./DataModel\";\r\nimport { FileWriter, homedir } from \"./FileWriter\";\r\nimport { APPLICATION_INSIGHTS_SDK_VERSION } from \"../Declarations/Constants\";\r\n\r\nexport interface StatusContract {\r\n    AgentInitializedSuccessfully: boolean;\r\n    Reason?: string;\r\n    SDKPresent: boolean;\r\n    AppType: string;\r\n    MachineName: string;\r\n    PID: string;\r\n    SdkVersion: string;\r\n    Ikey: string;\r\n}\r\n\r\nexport class StatusLogger {\r\n    public static readonly DEFAULT_FILE_PATH: string = path.join(homedir, \"status\");\r\n    public static readonly DEFAULT_FILE_NAME: string = `status_${os.hostname()}_${process.pid}.json`;\r\n    public static readonly DEFAULT_STATUS: StatusContract = {\r\n        AgentInitializedSuccessfully: false,\r\n        SDKPresent: false,\r\n        Ikey: \"unknown\",\r\n        AppType: \"node.js\",\r\n        SdkVersion: APPLICATION_INSIGHTS_SDK_VERSION,\r\n        MachineName: os.hostname(),\r\n        PID: String(process.pid)\r\n    }\r\n\r\n    constructor(public _writer: DataModel.AgentLogger = console, instrumentationKey: string = \"unknown\") {\r\n        StatusLogger.DEFAULT_STATUS.Ikey = instrumentationKey;\r\n    }\r\n\r\n    public logStatus(data: StatusContract, cb?: (err: Error) => void) {\r\n        if (typeof cb === \"function\" && this._writer instanceof FileWriter) {\r\n            this._writer.callback = cb;\r\n        }\r\n        this._writer.log(data);\r\n    }\r\n}\r\n"]}