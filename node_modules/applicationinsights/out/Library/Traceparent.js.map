{"version":3,"file":"Traceparent.js","sourceRoot":"","sources":["../../Library/Traceparent.ts"],"names":[],"mappings":"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","sourcesContent":["import { TraceFlags } from \"@opentelemetry/api\";\r\nimport Util = require(\"./Util\");\r\nimport CorrelationIdManager = require(\"./CorrelationIdManager\");\r\n\r\n/**\r\n * Helper class to manage parsing and validation of traceparent header. Also handles hierarchical\r\n * back-compatibility headers generated from traceparent. W3C traceparent spec is documented at\r\n * https://www.w3.org/TR/trace-context/#traceparent-field\r\n */\r\nclass Traceparent {\r\n    public static DEFAULT_TRACE_FLAG =   \"01\";\r\n    public static DEFAULT_VERSION = \"00\";\r\n\r\n    public legacyRootId: string;\r\n    public parentId: string;\r\n    public spanId: string;\r\n    public traceFlag: string = Traceparent.DEFAULT_TRACE_FLAG;\r\n    public traceId: string;\r\n    public version: string = Traceparent.DEFAULT_VERSION;\r\n\r\n    constructor(traceparent?: string, parentId?: string) {\r\n        if (traceparent && typeof traceparent === \"string\") { // traceparent constructor\r\n            // If incoming request contains traceparent: parse it, set operation, parent and telemetry id accordingly. traceparent should be injected into outgoing requests. request-id should be injected in back-compat format |traceId.spanId. so that older SDKs could understand it.\r\n            if (traceparent.split(\",\").length > 1) { // If more than 1 traceparent is present, discard both\r\n                this.traceId = Util.w3cTraceId();\r\n                this.spanId = Util.w3cTraceId().substr(0, 16);\r\n            } else {\r\n                const traceparentArr = traceparent.trim().split(\"-\");\r\n                const len = traceparentArr.length;\r\n                if (len >= 4) { // traceparent must contain at least 4 fields\r\n                    this.version = traceparentArr[0];\r\n                    this.traceId = traceparentArr[1];\r\n                    this.spanId = traceparentArr[2];\r\n                    this.traceFlag = traceparentArr[3];\r\n                } else { // Discard traceparent if a field is missing\r\n                    this.traceId = Util.w3cTraceId();\r\n                    this.spanId = Util.w3cTraceId().substr(0, 16);\r\n                }\r\n\r\n                // Version validation\r\n                if (!this.version.match(/^[0-9a-f]{2}$/g)) {\r\n                    this.version = Traceparent.DEFAULT_VERSION;\r\n                    this.traceId = Util.w3cTraceId();\r\n                }\r\n                if (this.version === \"00\" && len !== 4) { // 0x00 (and perhaps future versions) require exactly 4 fields. This strict check will need to be updated on each spec release\r\n                    this.traceId = Util.w3cTraceId();\r\n                    this.spanId = Util.w3cTraceId().substr(0, 16);\r\n                }\r\n                if (this.version === \"ff\") { // 0xff is forbidden, generate new traceparent\r\n                    this.version = Traceparent.DEFAULT_VERSION;\r\n                    this.traceId = Util.w3cTraceId();\r\n                    this.spanId = Util.w3cTraceId().substr(0, 16);\r\n                }\r\n                if (!this.version.match(/^0[0-9a-f]$/g)) {\r\n                    this.version = Traceparent.DEFAULT_VERSION;\r\n                }\r\n\r\n                // TraceFlag validation\r\n                if (!this.traceFlag.match(/^[0-9a-f]{2}$/g)) {\r\n                    this.traceFlag = Traceparent.DEFAULT_TRACE_FLAG;\r\n                    this.traceId = Util.w3cTraceId();\r\n                }\r\n\r\n                // Validate TraceId, regenerate new traceid if invalid\r\n                if (!Traceparent.isValidTraceId(this.traceId)) {\r\n                    this.traceId = Util.w3cTraceId();\r\n                }\r\n\r\n                // Validate Span Id, discard entire traceparent if invalid\r\n                if (!Traceparent.isValidSpanId(this.spanId)) {\r\n                    this.spanId = Util.w3cTraceId().substr(0, 16);\r\n                    this.traceId = Util.w3cTraceId();\r\n                }\r\n\r\n                // Save backCompat parentId\r\n                this.parentId = this.getBackCompatRequestId();\r\n            }\r\n        } else if (parentId) { // backcompat constructor\r\n            // If incoming request contains only request-id, new traceid and spanid should be started, request-id value should be used as a parent. Root part of request-id should be stored in custom dimension on the request telemetry if root part is different from traceid. On the outgoing request side, request-id should be emitted in the |traceId.spanId. format.\r\n            this.parentId = parentId.slice(); // copy\r\n            let operationId = CorrelationIdManager.getRootId(parentId);\r\n            if (!Traceparent.isValidTraceId(operationId)) {\r\n                this.legacyRootId = operationId;\r\n                operationId = Util.w3cTraceId();\r\n            }\r\n            if (parentId.indexOf(\"|\") !== -1) {\r\n                parentId = parentId.substring(1 + parentId.substring(0, parentId.length - 1).lastIndexOf(\".\"), parentId.length - 1);\r\n            }\r\n            this.traceId = operationId;\r\n            this.spanId = parentId;\r\n        } else {\r\n            // Fallback default constructor\r\n            // if request does not contain any correlation headers, see case p2\r\n            this.traceId = Util.w3cTraceId();\r\n            this.spanId = Util.w3cTraceId().substr(0, 16);\r\n        }\r\n\r\n    }\r\n\r\n    public static isValidTraceId(id: string): boolean {\r\n        return id.match(/^[0-9a-f]{32}$/) && id !== \"00000000000000000000000000000000\";\r\n    }\r\n\r\n    public static isValidSpanId(id: string): boolean {\r\n        return id.match(/^[0-9a-f]{16}$/) && id !== \"0000000000000000\";\r\n    }\r\n\r\n    public static formatOpenTelemetryTraceFlags(traceFlags : number){\r\n        let formattedFlags = (\"0\" + traceFlags.toString(16));\r\n        return formattedFlags.substring(formattedFlags.length -2);\r\n    }\r\n\r\n    public getBackCompatRequestId(): string {\r\n        return `|${this.traceId}.${this.spanId}.`;\r\n    }\r\n\r\n    public toString(): string {\r\n        return `${this.version}-${this.traceId}-${this.spanId}-${this.traceFlag}`;\r\n    }\r\n\r\n    public updateSpanId(): void {\r\n        this.spanId = Util.w3cTraceId().substr(0, 16);\r\n    }\r\n}\r\n\r\nexport = Traceparent;\r\n"]}