{"version":3,"file":"AuthorizationHandler.js","sourceRoot":"","sources":["../../Library/AuthorizationHandler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,4CAA+C;AAE/C,IAAM,2BAA2B,GAAG,qCAAqC,CAAC;AAG1E;IAII,8BAAY,UAAqC;QAC7C,IAAI,MAAM,GAAa,CAAC,2BAA2B,CAAC,CAAC;QACrD,IAAI,WAAW,GAA4B;YACvC,WAAW,EAAX,UAAY,WAAsC;gBAC9C,OAAO,IAAI,CAAC;YAChB,CAAC;SACJ,CAAC;QACF,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC,+BAA+B,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,SAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC;IACrJ,CAAC;IAED;;MAEE;IACW,qDAAsB,GAAnC,UAAoC,cAA0D;;;;;;wBACtF,cAAc,GAAG,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,aAAa,CAAC;wBACnE,WAAW,GAAG,IAAI,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;wBACxD,qBAAM,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,WAAW,CAAC,EAAA;;wBAArD,SAAqD,CAAC;wBACtD,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;;;;;KACpF;IAEL,2BAAC;AAAD,CAAC,AAxBD,IAwBC;AAED,iBAAS,oBAAoB,CAAC","sourcesContent":["import http = require(\"http\");\r\nimport https = require(\"https\");\r\nimport azureCore = require(\"@azure/core-http\");\r\n\r\nconst applicationInsightsResource = \"https://monitor.azure.com//.default\";\r\n\r\n\r\nclass AuthorizationHandler {\r\n\r\n    private _azureTokenPolicy: azureCore.RequestPolicy;\r\n\r\n    constructor(credential: azureCore.TokenCredential) {\r\n        let scopes: string[] = [applicationInsightsResource];\r\n        let emptyPolicy: azureCore.RequestPolicy = {\r\n            sendRequest(httpRequest: azureCore.WebResourceLike): Promise<azureCore.HttpOperationResponse> {\r\n                return null;\r\n            }\r\n        };\r\n        this._azureTokenPolicy = azureCore.bearerTokenAuthenticationPolicy(credential, scopes).create(emptyPolicy, new azureCore.RequestPolicyOptions());\r\n    }\r\n\r\n    /**\r\n    * Applies the Bearer token to the request through the Authorization header.\r\n    */\r\n    public async addAuthorizationHeader(requestOptions: http.RequestOptions | https.RequestOptions): Promise<void> {\r\n        let authHeaderName = azureCore.Constants.HeaderConstants.AUTHORIZATION;\r\n        let webResource = new azureCore.WebResource(\"https://\");\r\n        await this._azureTokenPolicy.sendRequest(webResource);\r\n        requestOptions.headers[authHeaderName] = webResource.headers.get(authHeaderName);\r\n    }\r\n\r\n}\r\n\r\nexport = AuthorizationHandler;"]}