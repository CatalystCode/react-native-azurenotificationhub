{"version":3,"file":"Config.js","sourceRoot":"","sources":["../../Library/Config.ts"],"names":[],"mappings":";AAEA,6DAAgE;AAChE,iEAAoE;AACpE,mCAAsC;AACtC,qDAAwD;AAGxD,yBAA4B;AAC5B,2CAA0C;AAK1C;IAsDI,gBAAY,WAAoB;QAAhC,iBA4CC;QAlDO,kBAAa,GAAW,SAAS,CAAC,uBAAuB,CAAC;QAO9D,8DAA8D;QAC9D,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAM,mBAAmB,GAAuB,IAAI,CAAC,iBAAiB,CAAC;QACvE,IAAM,MAAM,GAAG,sBAAsB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACzD,IAAM,KAAK,GAAG,sBAAsB,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAChE,IAAM,QAAQ,GAAG,CAAC,MAAM,CAAC,kBAAkB,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC;YACzE,CAAC,CAAC,IAAI,CAAC,oFAAoF;YAC3F,CAAC,CAAC,WAAW,CAAC,CAAC,wCAAwC;QAE3D,IAAM,qBAAqB,GAAuB,IAAI,CAAC,mBAAmB,CAAC;QAC3E,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,IAAI,QAAQ,CAAC,4BAA4B,IAAI,KAAK,CAAC,kBAAkB,IAAI,qBAAqB,CAAC;QAClJ,IAAI,QAAQ,GAAG,MAAG,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,iBAAiB,IAAI,KAAK,CAAC,iBAAiB,IAAI,IAAI,CAAC,aAAa,CAAE,CAAC;QAClH,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACxB,8BAA8B;YAC9B,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACpC;QACD,IAAI,CAAC,WAAW,GAAM,QAAQ,gBAAa,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,GAAG,CAAC;QAC7C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,IAAI,KAAK,CAAC;QAC3D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,IAAI,KAAK,CAAC;QAC3D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,IAAI,GAAG,CAAC;QACzD,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,4BAA4B,IAAI,EAAE,GAAG,IAAI,CAAC;QACnF,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC,6BAA6B,IAAI,KAAK,CAAC;QACjF,IAAI,CAAC,gCAAgC;YACjC,IAAI,CAAC,gCAAgC;gBACrC;oBACI,oBAAoB;oBACpB,yBAAyB;oBACzB,oBAAoB;oBACpB,0BAA0B;oBAC1B,yBAAyB;oBACzB,sBAAsB;iBACzB,CAAC;QAEN,IAAI,CAAC,iBAAiB,GAAG,UAAC,aAAa,IAAK,OAAA,KAAI,CAAC,aAAa,GAAG,aAAa,EAAlC,CAAkC,CAAC;QAC/E,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,IAAI,KAAK,CAAC;QAC7D,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,iBAAiB,IAAI,KAAK,CAAC,iBAAiB,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,wBAAwB,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC;QACtJ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,IAAI,MAAM,CAAC,YAAY,IAAI,KAAK,CAAC,YAAY,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,SAAS,CAAC,wBAAwB,CAAC;QACvK,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,0BAA0B,IAAI,IAAI,CAAC,2BAA2B,IAAI,EAAE,CAAC;QAC5G,oDAAoD;QACpD,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;YAC3C,IAAI,CAAC,cAAc,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC;SAC/D;IACL,CAAC;IAED,sBAAW,wCAAoB;aAO/B;YACI,OAAO,IAAI,CAAC,qBAAqB,CAAC;QACtC,CAAC;aATD,UAAgC,QAAgB;YAC5C,oBAAoB,CAAC,wBAAwB,CAAC,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC5E,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC;YACtC,IAAI,CAAC,aAAa,GAAG,oBAAoB,CAAC,mBAAmB,CAAC,CAAC,0DAA0D;YACzH,oBAAoB,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC1E,CAAC;;;OAAA;IAMD,sBAAW,sCAAkB;aAO7B;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC;QACpC,CAAC;aATD,UAA8B,IAAY;YACtC,IAAI,CAAC,MAAM,CAAC,2BAA2B,CAAC,IAAI,CAAC,EAAE;gBAC3C,OAAO,CAAC,IAAI,CAAC,oFAAoF,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;aAC/H;YACD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QACpC,CAAC;;;OAAA;IAMD,sBAAW,8CAA0B;aAIrC;YACI,OAAO,IAAI,CAAC,2BAA2B,CAAC;QAC5C,CAAC;aAND,UAAsC,gBAAwB;YAC1D,IAAI,CAAC,2BAA2B,GAAG,gBAAgB,CAAC;QACxD,CAAC;;;OAAA;IAMO,6BAAY,GAApB;QACI,IAAI,UAAU,GAAG,uBAAU,CAAC,WAAW,EAAE,CAAC;QAC1C,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC,gBAAgB,CAAC;QACrD,IAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC,kBAAkB,CAAC;QACzD,IAAI,CAAC,gCAAgC,GAAG,UAAU,CAAC,gCAAgC,CAAC;QACpF,IAAI,CAAC,4BAA4B,GAAG,UAAU,CAAC,4BAA4B,CAAC;QAC5E,IAAI,CAAC,yBAAyB,GAAG,UAAU,CAAC,yBAAyB,CAAC;QACtE,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC,kBAAkB,CAAC;QACxD,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,gBAAgB,CAAC;QACpD,IAAI,CAAC,sBAAsB,GAAG,UAAU,CAAC,sBAAsB,CAAC;QAChE,IAAI,CAAC,wBAAwB,GAAG,UAAU,CAAC,wBAAwB,CAAC;QACpE,IAAI,CAAC,6BAA6B,GAAG,UAAU,CAAC,6BAA6B,CAAC;QAC9E,IAAI,CAAC,2BAA2B,GAAG,UAAU,CAAC,2BAA2B,CAAC;QAC1E,IAAI,CAAC,gCAAgC,GAAG,UAAU,CAAC,gCAAgC,CAAC;QACpF,IAAI,CAAC,gCAAgC,GAAG,UAAU,CAAC,gCAAgC,CAAC;QACpF,IAAI,CAAC,0BAA0B,GAAG,UAAU,CAAC,0BAA0B,CAAC;QACxE,IAAI,CAAC,4BAA4B,GAAG,UAAU,CAAC,4BAA4B,CAAC;QAC5E,IAAI,CAAC,qCAAqC,GAAG,UAAU,CAAC,qCAAqC,CAAC;QAC9F,IAAI,CAAC,yBAAyB,GAAG,UAAU,CAAC,yBAAyB,CAAC;QACtE,IAAI,CAAC,+BAA+B,GAAG,UAAU,CAAC,+BAA+B,CAAC;QAClF,IAAI,CAAC,0BAA0B,GAAG,UAAU,CAAC,0BAA0B,CAAC;QACxE,IAAI,CAAC,4BAA4B,GAAG,UAAU,CAAC,4BAA4B,CAAC;QAC5E,IAAI,CAAC,oBAAoB,GAAG,UAAU,CAAC,oBAAoB,CAAC;QAC5D,IAAI,CAAC,oBAAoB,GAAG,UAAU,CAAC,oBAAoB,CAAC;QAC5D,IAAI,CAAC,qBAAqB,GAAG,UAAU,CAAC,qBAAqB,CAAC;QAC9D,IAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC,mBAAmB,CAAC;QAC1D,IAAI,CAAC,yBAAyB,GAAG,UAAU,CAAC,yBAAyB,CAAC;QACtE,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;QAC1C,IAAI,CAAC,uBAAuB,GAAG,UAAU,CAAC,uBAAuB,CAAC;QAClE,IAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC,mBAAmB,CAAC;QAC1D,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC,kBAAkB,CAAC;QACxD,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;QAC5C,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,aAAa,CAAC;QAC9C,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC,cAAc,CAAC;QAChD,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC,kBAAkB,CAAC;QACxD,IAAI,CAAC,6BAA6B,GAAG,UAAU,CAAC,6BAA6B,CAAC;QAC9E,IAAI,CAAC,0BAA0B,GAAG,UAAU,CAAC,0BAA0B,CAAC;IAC5E,CAAC;IAED;;;;;;;;;;;;;MAaE;IACa,kCAA2B,GAA1C,UAA2C,IAAY;QACnD,IAAM,UAAU,GAAG,gEAAgE,CAAC;QACpF,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;QACtC,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IA1La,sBAAe,GAAG,aAAa,CAAC,CAAC,sDAAsD;IACvF,eAAQ,GAAG,gCAAgC,CAAC,CAAC,qCAAqC;IAClF,sBAAe,GAAG,iCAAiC,CAAC;IACpD,+BAAwB,GAAG,oCAAoC,CAAC;IAChE,yBAAkB,GAAG,6BAA6B,CAAC;IAuLrE,aAAC;CAAA,AA7LD,IA6LC;AAED,iBAAS,MAAM,CAAC","sourcesContent":["import azureCore = require(\"@azure/core-http\");\r\n\r\nimport CorrelationIdManager = require(\"./CorrelationIdManager\");\r\nimport ConnectionStringParser = require(\"./ConnectionStringParser\");\r\nimport Logging = require(\"./Logging\");\r\nimport Constants = require(\"../Declarations/Constants\");\r\nimport http = require(\"http\");\r\nimport https = require(\"https\");\r\nimport url = require(\"url\");\r\nimport { JsonConfig } from \"./JsonConfig\";\r\nimport { IConfig } from \"../Declarations/Interfaces\";\r\nimport { DistributedTracingModes } from \"../applicationinsights\";\r\nimport { IDisabledExtendedMetrics } from \"../AutoCollection/NativePerformance\";\r\n\r\nclass Config implements IConfig {\r\n\r\n    public static ENV_azurePrefix = \"APPSETTING_\"; // Azure adds this prefix to all environment variables\r\n    public static ENV_iKey = \"APPINSIGHTS_INSTRUMENTATIONKEY\"; // This key is provided in the readme\r\n    public static legacy_ENV_iKey = \"APPINSIGHTS_INSTRUMENTATION_KEY\";\r\n    public static ENV_profileQueryEndpoint = \"APPINSIGHTS_PROFILE_QUERY_ENDPOINT\";\r\n    public static ENV_quickPulseHost = \"APPINSIGHTS_QUICKPULSE_HOST\";\r\n\r\n    // IConfig properties\r\n    public endpointUrl: string;\r\n    public maxBatchSize: number;\r\n    public maxBatchIntervalMs: number;\r\n    public disableAppInsights: boolean;\r\n    public samplingPercentage: number;\r\n    public correlationIdRetryIntervalMs: number;\r\n    public correlationHeaderExcludedDomains: string[];\r\n    public proxyHttpUrl: string;\r\n    public proxyHttpsUrl: string;\r\n    public httpAgent: http.Agent;\r\n    public httpsAgent: https.Agent;\r\n    public ignoreLegacyHeaders: boolean;\r\n    public aadTokenCredential?: azureCore.TokenCredential;\r\n    public enableAutoCollectConsole: boolean;\r\n    public enableAutoCollectExceptions: boolean;\r\n    public enableAutoCollectPerformance: boolean;\r\n    public enableAutoCollectExternalLoggers: boolean;\r\n    public enableAutoCollectPreAggregatedMetrics: boolean;\r\n    public enableAutoCollectHeartbeat: boolean;\r\n    public enableAutoCollectRequests: boolean;\r\n    public enableAutoCollectDependencies: boolean;\r\n    public enableAutoDependencyCorrelation: boolean;\r\n    public enableSendLiveMetrics: boolean;\r\n    public enableUseDiskRetryCaching: boolean;\r\n    public enableUseAsyncHooks: boolean;\r\n    public distributedTracingMode: DistributedTracingModes;\r\n    public enableAutoCollectExtendedMetrics: boolean | IDisabledExtendedMetrics;\r\n    public enableResendInterval: number;\r\n    public enableMaxBytesOnDisk: number;\r\n    public enableInternalDebugLogging: boolean;\r\n    public enableInternalWarningLogging: boolean;\r\n    public disableAllExtendedMetrics: boolean;\r\n    public disableStatsbeat: boolean;\r\n    public extendedMetricDisablers: string;\r\n    public quickPulseHost: string;\r\n    public enableAutoWebSnippetInjection: boolean;\r\n\r\n    public correlationId: string; // TODO: Should be private\r\n    private _connectionString: string;\r\n    private _endpointBase: string = Constants.DEFAULT_BREEZE_ENDPOINT;\r\n    private _setCorrelationId: (v: string) => void;\r\n    private _profileQueryEndpoint: string;\r\n    private _instrumentationKey: string;\r\n    private _webSnippetConnectionString: string;\r\n \r\n    constructor(setupString?: string) {\r\n        // Load config values from env variables and JSON if available\r\n        this._mergeConfig();\r\n        const connectionStringEnv: string | undefined = this._connectionString;\r\n        const csCode = ConnectionStringParser.parse(setupString);\r\n        const csEnv = ConnectionStringParser.parse(connectionStringEnv);\r\n        const iKeyCode = !csCode.instrumentationkey && Object.keys(csCode).length > 0\r\n            ? null // CS was valid but instrumentation key was not provided, null and grab from env var\r\n            : setupString; // CS was invalid, so it must be an ikey\r\n\r\n        const instrumentationKeyEnv: string | undefined = this._instrumentationKey;\r\n        this.instrumentationKey = csCode.instrumentationkey || iKeyCode /* === instrumentationKey */ || csEnv.instrumentationkey || instrumentationKeyEnv;\r\n        let endpoint = `${this.endpointUrl || csCode.ingestionendpoint || csEnv.ingestionendpoint || this._endpointBase}`;\r\n        if (endpoint.endsWith(\"/\")) {\r\n            // Remove extra '/' if present\r\n            endpoint = endpoint.slice(0, -1);\r\n        }\r\n        this.endpointUrl = `${endpoint}/v2.1/track`;\r\n        this.maxBatchSize = this.maxBatchSize || 250;\r\n        this.maxBatchIntervalMs = this.maxBatchIntervalMs || 15000;\r\n        this.disableAppInsights = this.disableAppInsights || false;\r\n        this.samplingPercentage = this.samplingPercentage || 100;\r\n        this.correlationIdRetryIntervalMs = this.correlationIdRetryIntervalMs || 30 * 1000;\r\n        this.enableAutoWebSnippetInjection = this.enableAutoWebSnippetInjection || false;\r\n        this.correlationHeaderExcludedDomains =\r\n            this.correlationHeaderExcludedDomains ||\r\n            [\r\n                \"*.core.windows.net\",\r\n                \"*.core.chinacloudapi.cn\",\r\n                \"*.core.cloudapi.de\",\r\n                \"*.core.usgovcloudapi.net\",\r\n                \"*.core.microsoft.scloud\",\r\n                \"*.core.eaglex.ic.gov\"\r\n            ];\r\n\r\n        this._setCorrelationId = (correlationId) => this.correlationId = correlationId;\r\n        this.ignoreLegacyHeaders = this.ignoreLegacyHeaders || false;\r\n        this.profileQueryEndpoint = csCode.ingestionendpoint || csEnv.ingestionendpoint || process.env[Config.ENV_profileQueryEndpoint] || this._endpointBase;\r\n        this.quickPulseHost = this.quickPulseHost || csCode.liveendpoint || csEnv.liveendpoint || process.env[Config.ENV_quickPulseHost] || Constants.DEFAULT_LIVEMETRICS_HOST;\r\n        this.webSnippetConnectionString = this.webSnippetConnectionString || this._webSnippetConnectionString || \"\";\r\n        // Parse quickPulseHost if it starts with http(s)://\r\n        if (this.quickPulseHost.match(/^https?:\\/\\//)) {\r\n            this.quickPulseHost = new url.URL(this.quickPulseHost).host;\r\n        }\r\n    }\r\n\r\n    public set profileQueryEndpoint(endpoint: string) {\r\n        CorrelationIdManager.cancelCorrelationIdQuery(this, this._setCorrelationId);\r\n        this._profileQueryEndpoint = endpoint;\r\n        this.correlationId = CorrelationIdManager.correlationIdPrefix; // Reset the correlationId while we wait for the new query\r\n        CorrelationIdManager.queryCorrelationId(this, this._setCorrelationId);\r\n    }\r\n\r\n    public get profileQueryEndpoint() {\r\n        return this._profileQueryEndpoint;\r\n    }\r\n\r\n    public set instrumentationKey(iKey: string) {\r\n        if (!Config._validateInstrumentationKey(iKey)) {\r\n            Logging.warn(\"An invalid instrumentation key was provided. There may be resulting telemetry loss\", this.instrumentationKey);\r\n        }\r\n        this._instrumentationKey = iKey;\r\n    }\r\n\r\n    public get instrumentationKey(): string {\r\n        return this._instrumentationKey;\r\n    }\r\n\r\n    public set webSnippetConnectionString(connectionString: string) {\r\n        this._webSnippetConnectionString = connectionString;\r\n    }\r\n\r\n    public get webSnippetConnectionString(): string {\r\n        return this._webSnippetConnectionString;\r\n    }\r\n\r\n    private _mergeConfig() {\r\n        let jsonConfig = JsonConfig.getInstance();\r\n        this._connectionString = jsonConfig.connectionString;\r\n        this._instrumentationKey = jsonConfig.instrumentationKey;\r\n        this.correlationHeaderExcludedDomains = jsonConfig.correlationHeaderExcludedDomains;\r\n        this.correlationIdRetryIntervalMs = jsonConfig.correlationIdRetryIntervalMs;\r\n        this.disableAllExtendedMetrics = jsonConfig.disableAllExtendedMetrics;\r\n        this.disableAppInsights = jsonConfig.disableAppInsights;\r\n        this.disableStatsbeat = jsonConfig.disableStatsbeat;\r\n        this.distributedTracingMode = jsonConfig.distributedTracingMode;\r\n        this.enableAutoCollectConsole = jsonConfig.enableAutoCollectConsole;\r\n        this.enableAutoCollectDependencies = jsonConfig.enableAutoCollectDependencies;\r\n        this.enableAutoCollectExceptions = jsonConfig.enableAutoCollectExceptions;\r\n        this.enableAutoCollectExtendedMetrics = jsonConfig.enableAutoCollectExtendedMetrics;\r\n        this.enableAutoCollectExternalLoggers = jsonConfig.enableAutoCollectExternalLoggers;\r\n        this.enableAutoCollectHeartbeat = jsonConfig.enableAutoCollectHeartbeat;\r\n        this.enableAutoCollectPerformance = jsonConfig.enableAutoCollectPerformance;\r\n        this.enableAutoCollectPreAggregatedMetrics = jsonConfig.enableAutoCollectPreAggregatedMetrics;\r\n        this.enableAutoCollectRequests = jsonConfig.enableAutoCollectRequests;\r\n        this.enableAutoDependencyCorrelation = jsonConfig.enableAutoDependencyCorrelation;\r\n        this.enableInternalDebugLogging = jsonConfig.enableInternalDebugLogging;\r\n        this.enableInternalWarningLogging = jsonConfig.enableInternalWarningLogging;\r\n        this.enableResendInterval = jsonConfig.enableResendInterval;\r\n        this.enableMaxBytesOnDisk = jsonConfig.enableMaxBytesOnDisk;\r\n        this.enableSendLiveMetrics = jsonConfig.enableSendLiveMetrics;\r\n        this.enableUseAsyncHooks = jsonConfig.enableUseAsyncHooks;\r\n        this.enableUseDiskRetryCaching = jsonConfig.enableUseDiskRetryCaching;\r\n        this.endpointUrl = jsonConfig.endpointUrl;\r\n        this.extendedMetricDisablers = jsonConfig.extendedMetricDisablers;\r\n        this.ignoreLegacyHeaders = jsonConfig.ignoreLegacyHeaders;\r\n        this.maxBatchIntervalMs = jsonConfig.maxBatchIntervalMs;\r\n        this.maxBatchSize = jsonConfig.maxBatchSize;\r\n        this.proxyHttpUrl = jsonConfig.proxyHttpUrl;\r\n        this.proxyHttpsUrl = jsonConfig.proxyHttpsUrl;\r\n        this.quickPulseHost = jsonConfig.quickPulseHost;\r\n        this.samplingPercentage = jsonConfig.samplingPercentage;\r\n        this.enableAutoWebSnippetInjection = jsonConfig.enableAutoWebSnippetInjection;\r\n        this.webSnippetConnectionString = jsonConfig.webSnippetConnectionString;\r\n    }\r\n\r\n    /**\r\n    * Validate UUID Format\r\n    * Specs taken from breeze repo\r\n    * The definition of a VALID instrumentation key is as follows:\r\n    * Not none\r\n    * Not empty\r\n    * Every character is a hex character [0-9a-f]\r\n    * 32 characters are separated into 5 sections via 4 dashes\r\n    * First section has 8 characters\r\n    * Second section has 4 characters\r\n    * Third section has 4 characters\r\n    * Fourth section has 4 characters\r\n    * Fifth section has 12 characters\r\n    */\r\n    private static _validateInstrumentationKey(iKey: string): boolean {\r\n        const UUID_Regex = \"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$\";\r\n        const regexp = new RegExp(UUID_Regex);\r\n        return regexp.test(iKey);\r\n    }\r\n}\r\n\r\nexport = Config;\r\n"]}