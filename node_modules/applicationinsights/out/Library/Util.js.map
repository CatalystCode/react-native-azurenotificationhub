{"version":3,"file":"Util.js","sourceRoot":"","sources":["../../Library/Util.ts"],"names":[],"mappings":"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","sourcesContent":["import http = require(\"http\");\r\nimport https = require(\"https\");\r\nimport url = require(\"url\");\r\nimport constants = require(\"constants\");\r\n\r\nimport Logging = require(\"./Logging\");\r\nimport Config = require(\"./Config\");\r\nimport TelemetryClient = require(\"../Library/TelemetryClient\");\r\nimport RequestResponseHeaders = require(\"./RequestResponseHeaders\");\r\nimport { HttpRequest } from \"../Library/Functions\";\r\nimport { JsonConfig } from \"./JsonConfig\";\r\n\r\n\r\nclass Util {\r\n    private static _useKeepAlive = !JsonConfig.getInstance().noHttpAgentKeepAlive;\r\n    private static _listenerAttached = false;\r\n\r\n    public static MAX_PROPERTY_LENGTH = 8192;\r\n    public static keepAliveAgent: http.Agent = new https.Agent(<any>{\r\n        keepAlive: true,\r\n        maxSockets: 25,\r\n        secureOptions: constants.SSL_OP_NO_SSLv2 | constants.SSL_OP_NO_SSLv3 |\r\n            constants.SSL_OP_NO_TLSv1 | constants.SSL_OP_NO_TLSv1_1\r\n    });\r\n    public static tlsRestrictedAgent: http.Agent = new https.Agent(<any>{\r\n        secureOptions: constants.SSL_OP_NO_SSLv2 | constants.SSL_OP_NO_SSLv3 |\r\n            constants.SSL_OP_NO_TLSv1 | constants.SSL_OP_NO_TLSv1_1\r\n    });\r\n    public static isNodeExit = false;\r\n\r\n    public constructor() {\r\n        Util._addCloseHandler();\r\n    }\r\n\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    public static getCookie(name: string, cookie: string) {\r\n        var value = \"\";\r\n        if (name && name.length && typeof cookie === \"string\") {\r\n            var cookieName = name + \"=\";\r\n            var cookies = cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    public static trim(str: string): string {\r\n        if (typeof str === \"string\") {\r\n            return str.replace(/^\\s+|\\s+$/g, \"\");\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert an array of int32 to Base64 (no '==' at the end).\r\n     * MSB first.\r\n     */\r\n    public static int32ArrayToBase64(array: number[]) {\r\n        let toChar = (v: number, i: number) =>\r\n            String.fromCharCode((v >> i) & 0xFF);\r\n        let int32AsString = (v: number) =>\r\n            toChar(v, 24) + toChar(v, 16) + toChar(v, 8) + toChar(v, 0);\r\n        let x = array.map(int32AsString).join(\"\");\r\n        const b = Buffer.from ? Buffer.from(x, \"binary\") : new Buffer(x, \"binary\");\r\n        let s = b.toString(\"base64\");\r\n        return s.substr(0, s.indexOf(\"=\"));\r\n    }\r\n\r\n    /**\r\n     * generate a random 32bit number (-0x80000000..0x7FFFFFFF).\r\n     */\r\n    public static random32() {\r\n        return (0x100000000 * Math.random()) | 0;\r\n    }\r\n\r\n    /**\r\n     * generate a random 32bit number (0x00000000..0xFFFFFFFF).\r\n     */\r\n    public static randomu32() {\r\n        return Util.random32() + 0x80000000;\r\n    }\r\n\r\n    /**\r\n     * generate W3C-compatible trace id\r\n     * https://github.com/w3c/distributed-tracing/blob/master/trace_context/HTTP_HEADER_FORMAT.md#trace-id\r\n     */\r\n    public static w3cTraceId() {\r\n        var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n\r\n        // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n        var oct = \"\", tmp;\r\n        for (var a = 0; a < 4; a++) {\r\n            tmp = Util.random32();\r\n            oct +=\r\n                hexValues[tmp & 0xF] +\r\n                hexValues[tmp >> 4 & 0xF] +\r\n                hexValues[tmp >> 8 & 0xF] +\r\n                hexValues[tmp >> 12 & 0xF] +\r\n                hexValues[tmp >> 16 & 0xF] +\r\n                hexValues[tmp >> 20 & 0xF] +\r\n                hexValues[tmp >> 24 & 0xF] +\r\n                hexValues[tmp >> 28 & 0xF];\r\n        }\r\n\r\n        // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n        var clockSequenceHi = hexValues[8 + (Math.random() * 4) | 0];\r\n        return oct.substr(0, 8) + oct.substr(9, 4) + \"4\" + oct.substr(13, 3) + clockSequenceHi + oct.substr(16, 3) + oct.substr(19, 12);\r\n    }\r\n\r\n    public static w3cSpanId() {\r\n        return Util.w3cTraceId().substring(16);\r\n    }\r\n\r\n    public static isValidW3CId(id: string): boolean {\r\n        return id.length === 32 && id !== \"00000000000000000000000000000000\";\r\n    }\r\n\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    public static isArray(obj: any): boolean {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    }\r\n\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    public static isError(obj: any): boolean {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    }\r\n\r\n    public static isPrimitive(input: any): boolean {\r\n        const propType = typeof input;\r\n        return propType === \"string\" || propType === \"number\" || propType === \"boolean\";\r\n    }\r\n\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    public static isDate(obj: any): boolean {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    }\r\n\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    public static msToTimeSpan(totalms: number): string {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n\r\n        var sec = ((totalms / 1000) % 60).toFixed(7).replace(/0{0,4}$/, \"\");\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n\r\n        sec = sec.indexOf(\".\") < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        var daysText = days > 0 ? days + \".\" : \"\";\r\n\r\n        return daysText + hour + \":\" + min + \":\" + sec;\r\n    }\r\n\r\n    /**\r\n     * Using JSON.stringify, by default Errors do not serialize to something useful:\r\n     * Simplify a generic Node Error into a simpler map for customDimensions\r\n     * Custom errors can still implement toJSON to override this functionality\r\n     */\r\n    protected static extractError(err: Error): { message: string, code: string } {\r\n        // Error is often subclassed so may have code OR id properties:\r\n        // https://nodejs.org/api/errors.html#errors_error_code\r\n        const looseError = err as any;\r\n        return {\r\n            message: err.message,\r\n            code: looseError.code || looseError.id || \"\"\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Manually call toJSON if available to pre-convert the value.\r\n     * If a primitive is returned, then the consumer of this function can skip JSON.stringify.\r\n     * This avoids double escaping of quotes for Date objects, for example.\r\n     */\r\n    protected static extractObject(origProperty: any): any {\r\n        if (origProperty instanceof Error) {\r\n            return Util.extractError(origProperty);\r\n        }\r\n        if (typeof origProperty.toJSON === \"function\") {\r\n            return origProperty.toJSON();\r\n        }\r\n        return origProperty;\r\n    }\r\n\r\n    /**\r\n     * Validate that an object is of type { [key: string]: string }\r\n     */\r\n    public static validateStringMap(obj: any): { [key: string]: string } {\r\n        if (typeof obj !== \"object\") {\r\n            Logging.info(\"Invalid properties dropped from payload\");\r\n            return;\r\n        }\r\n        const map: { [key: string]: string } = {};\r\n        for (let field in obj) {\r\n            let property: string = \"\";\r\n            const origProperty: any = obj[field];\r\n            const propType = typeof origProperty;\r\n\r\n            if (Util.isPrimitive(origProperty)) {\r\n                property = origProperty.toString();\r\n            } else if (origProperty === null || propType === \"undefined\") {\r\n                property = \"\";\r\n            } else if (propType === \"function\") {\r\n                Logging.info(\"key: \" + field + \" was function; will not serialize\");\r\n                continue;\r\n            } else {\r\n                const stringTarget = Util.isArray(origProperty) ? origProperty : Util.extractObject(origProperty);\r\n                try {\r\n                    if (Util.isPrimitive(stringTarget)) {\r\n                        property = stringTarget;\r\n                    } else {\r\n                        property = JSON.stringify(stringTarget);\r\n                    }\r\n                } catch (e) {\r\n                    property = origProperty.constructor.name.toString() + \" (Error: \" + e.message + \")\";\r\n                    Logging.info(\"key: \" + field + \", could not be serialized\");\r\n                }\r\n            }\r\n\r\n            map[field] = property.substring(0, Util.MAX_PROPERTY_LENGTH);\r\n        }\r\n        return map;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if a request url is not on a excluded domain list\r\n     * and if it is safe to add correlation headers\r\n     */\r\n    public static canIncludeCorrelationHeader(client: TelemetryClient, requestUrl: string) {\r\n        let excludedDomains = client && client.config && client.config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length == 0 || !requestUrl) {\r\n            return true;\r\n        }\r\n\r\n        for (let i = 0; i < excludedDomains.length; i++) {\r\n            let regex = new RegExp(excludedDomains[i].replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            try {\r\n                if (regex.test(new url.URL(requestUrl).hostname)) {\r\n                    return false;\r\n                }\r\n            }\r\n            catch (ex) {\r\n                // Ignore errors\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public static getCorrelationContextTarget(response: http.ClientResponse | http.ServerRequest | HttpRequest, key: string) {\r\n        const contextHeaders = response.headers && response.headers[RequestResponseHeaders.requestContextHeader];\r\n        if (contextHeaders) {\r\n            const keyValues = (<any>contextHeaders).split(\",\");\r\n            for (let i = 0; i < keyValues.length; ++i) {\r\n                const keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length == 2 && keyValue[0] == key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Generate request\r\n     *\r\n     * Proxify the request creation to handle proxy http\r\n     *\r\n     * @param {string} requestUrl url endpoint\r\n     * @param {Object} requestOptions Request option\r\n     * @param {Function} requestCallback callback on request\r\n     * @param {boolean} useProxy Use proxy URL from config\r\n     * @param {boolean} useAgent Set Http Agent in request\r\n     * @returns {http.ClientRequest} request object\r\n     */\r\n    public static makeRequest(\r\n        config: Config,\r\n        requestUrl: string,\r\n        requestOptions: http.RequestOptions | https.RequestOptions,\r\n        requestCallback: (res: http.IncomingMessage) => void,\r\n        useProxy = true,\r\n        useAgent = true): http.ClientRequest {\r\n\r\n        if (requestUrl && requestUrl.indexOf(\"//\") === 0) {\r\n            requestUrl = \"https:\" + requestUrl;\r\n        }\r\n\r\n        var requestUrlParsed = new url.URL(requestUrl);\r\n        var options = {\r\n            ...requestOptions,\r\n            host: requestUrlParsed.hostname,\r\n            port: requestUrlParsed.port,\r\n            path: requestUrlParsed.pathname\r\n        };\r\n\r\n        var proxyUrl: string = undefined;\r\n        if (useProxy) {\r\n            if (requestUrlParsed.protocol === \"https:\") {\r\n                proxyUrl = config.proxyHttpsUrl || undefined;\r\n            }\r\n            if (requestUrlParsed.protocol === \"http:\") {\r\n                proxyUrl = config.proxyHttpUrl || undefined;\r\n            }\r\n            if (proxyUrl) {\r\n                if (proxyUrl.indexOf(\"//\") === 0) {\r\n                    proxyUrl = \"http:\" + proxyUrl;\r\n                }\r\n                try {\r\n                    var proxyUrlParsed = new url.URL(proxyUrl);\r\n                    // https is not supported at the moment\r\n                    if (proxyUrlParsed.protocol === \"https:\") {\r\n                        Logging.info(\"Proxies that use HTTPS are not supported\");\r\n                        proxyUrl = undefined;\r\n                    } else {\r\n                        options = {\r\n                            ...options,\r\n                            host: proxyUrlParsed.hostname,\r\n                            port: proxyUrlParsed.port || \"80\",\r\n                            path: requestUrl,\r\n                            headers: {\r\n                                ...options.headers,\r\n                                Host: requestUrlParsed.hostname\r\n                            }\r\n                        };\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    Logging.warn(\"Wrong proxy URL provided\");\r\n                }\r\n            }\r\n        }\r\n\r\n        var isHttps = requestUrlParsed.protocol === \"https:\" && !proxyUrl;\r\n        if (useAgent) {\r\n            if (isHttps && config.httpsAgent !== undefined) {\r\n                options.agent = config.httpsAgent;\r\n            } else if (!isHttps && config.httpAgent !== undefined) {\r\n                options.agent = config.httpAgent;\r\n            } else if (isHttps) {\r\n                // HTTPS without a passed in agent. Use one that enforces our TLS rules\r\n                options.agent = Util._useKeepAlive ? Util.keepAliveAgent : Util.tlsRestrictedAgent;\r\n            }\r\n        }\r\n        if (isHttps) {\r\n            return https.request(<any>options, requestCallback);\r\n        } else {\r\n            return http.request(<any>options, requestCallback);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Parse standard <string | string[] | number> request-context header\r\n     */\r\n    public static safeIncludeCorrelationHeader(client: TelemetryClient, request: http.ClientRequest | http.ServerResponse, correlationHeader: any) {\r\n        let header: string; // attempt to cast correlationHeader to string\r\n        if (typeof correlationHeader === \"string\") {\r\n            header = correlationHeader;\r\n        } else if (correlationHeader instanceof Array) { // string[]\r\n            header = correlationHeader.join(\",\");\r\n        } else if (correlationHeader && typeof (correlationHeader as any).toString === \"function\") {\r\n            // best effort attempt: requires well-defined toString\r\n            try {\r\n                header = (correlationHeader as any).toString();\r\n            } catch (err) {\r\n                Logging.warn(\"Outgoing request-context header could not be read. Correlation of requests may be lost.\", err, correlationHeader);\r\n            }\r\n        }\r\n\r\n        if (header) {\r\n            Util.addCorrelationIdHeaderFromString(client, request, header);\r\n        } else {\r\n            request.setHeader(\r\n                RequestResponseHeaders.requestContextHeader,\r\n                `${RequestResponseHeaders.requestContextSourceKey}=${client.config.correlationId}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns string representation of an object suitable for diagnostics logging.\r\n     */\r\n    public static dumpObj(object: any): string {\r\n        if (object) {\r\n            try {\r\n                const objectTypeDump: string = Object[\"prototype\"].toString.call(object);\r\n                let propertyValueDump: string = \"\";\r\n                if (objectTypeDump === \"[object Error]\") {\r\n                    propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n                } else {\r\n                    propertyValueDump = this.stringify(object);\r\n                }\r\n\r\n                return objectTypeDump + propertyValueDump;\r\n            }\r\n            catch (ex) {\r\n                return object.toString();\r\n            }\r\n        }\r\n    }\r\n\r\n    public static stringify(payload: any) {\r\n        try {\r\n            return JSON.stringify(payload);\r\n        } catch (error) {\r\n            Logging.warn(\"Failed to serialize payload\", error, payload);\r\n        }\r\n    }\r\n\r\n    private static addCorrelationIdHeaderFromString(client: TelemetryClient, response: http.ClientRequest | http.ServerResponse, correlationHeader: string) {\r\n        const components = correlationHeader.split(\",\");\r\n        const key = `${RequestResponseHeaders.requestContextSourceKey}=`;\r\n        const found = components.some(value => value.substring(0, key.length) === key);\r\n\r\n        if (!found) {\r\n            response.setHeader(\r\n                RequestResponseHeaders.requestContextHeader,\r\n                `${correlationHeader},${RequestResponseHeaders.requestContextSourceKey}=${client.config.correlationId}`);\r\n        }\r\n    }\r\n\r\n    private static _addCloseHandler() {\r\n        if (!Util._listenerAttached) {\r\n            process.on(\"exit\", () => {\r\n                Util.isNodeExit = true;\r\n                Util._useKeepAlive = false;\r\n            });\r\n            Util._listenerAttached = true;\r\n        }\r\n    }\r\n}\r\nexport = Util;\r\n"]}